{
   "$defs": {
      "AGMDiseaseAnnotation": {
         "additionalProperties": false,
         "description": "An annotation asserting an association between an AGM and a disease supported by evidence.",
         "properties": {
            "annotation_type": {
               "description": "The type of annotation classified according to curation method. Submitted value should be a vocabulary term from the 'Annotation types' vocabulary",
               "type": "string"
            },
            "condition_relations": {
               "items": {
                  "$ref": "#/$defs/ConditionRelation"
               },
               "type": "array"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "data_provider": {
               "description": "Organization (e.g. MOD) from which the data was sourced",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "disease_genetic_modifier": {
               "description": "Specifies a genetic object that modifies the disease model. May be a gene, allele, AGM.",
               "type": "string"
            },
            "disease_genetic_modifier_relation": {
               "description": "A relation describing how the genetic modifier modifies the disease model. Submitted value should be a vocabulary term from the 'Disease genetic modifiers' vocabulary",
               "type": "string"
            },
            "disease_qualifiers": {
               "description": "Submitted values should be vocabulary terms from the 'Disease Qualifiers' vocabulary",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "evidence_codes": {
               "description": "ECO term IDs",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "genetic_sex": {
               "description": "Submitted value should be a vocabulary term from the 'Genetic sexes' vocabulary",
               "type": "string"
            },
            "inferred_allele": {
               "description": "The allele to which the disease is inferred to be associated.",
               "type": "string"
            },
            "inferred_gene": {
               "description": "The gene to which the disease is inferred to be associated.",
               "type": "string"
            },
            "mod_entity_id": {
               "description": "The model organism database (MOD) identifier/curie for the disease annotation. Currently only used by WormBase for disease annotations, e.g. \"WBDOannot00000907\"",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "negated": {
               "description": "The negative qualifier for the annotation.",
               "type": "boolean"
            },
            "object": {
               "description": "The disease ontology term.",
               "type": "string"
            },
            "predicate": {
               "description": "The relationship between AGM and disease. Submitted value should be a vocabulary term from the 'AGM disease relations' vocabulary",
               "type": "string"
            },
            "related_notes": {
               "description": "Holds between an object and a list of related Note objects.",
               "items": {
                  "$ref": "#/$defs/Note"
               },
               "type": "array"
            },
            "secondary_data_provider": {
               "description": "Organization (e.g. MOD) that provided the data directly to the Alliance, but not the original source",
               "type": "string"
            },
            "single_reference": {
               "description": "The reference in which the disease association was asserted/reported.",
               "type": "string"
            },
            "subject": {
               "description": "The AGM to which the disease ontology term is associated.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "unique_id": {
               "description": "Unique identifer for the disease annotation.  Will be generated at AGR if not submitted by the MOD.",
               "type": "string"
            },
            "with": {
               "description": "A field for disease annotations that captures the human gene the implicated MOD gene is homologous or orthologous to when using the ISS (inferred from sequence similarity) evidence code or the ISO (inferred from sequence orthology) evidence code. The assertion would state that the MOD gene is implicated in the indicated disease based on sequence-similarity/sequence-orthology \"with\" some human gene. Currently used by SGD.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "evidence_codes",
            "single_reference",
            "data_provider",
            "object",
            "created_by",
            "modified_by",
            "subject",
            "predicate"
         ],
         "title": "AGMDiseaseAnnotation",
         "type": "object"
      },
      "AGMPhenotypeAnnotation": {
         "additionalProperties": false,
         "description": "An annotation asserting an association between an AGM and a phenotype supported by evidence.",
         "properties": {
            "condition_relations": {
               "items": {
                  "$ref": "#/$defs/ConditionRelation"
               },
               "type": "array"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date of curation at the source (MOD) database.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "inferred_allele": {
               "description": "The allele to which the phenotype is inferred to be associated.",
               "type": "string"
            },
            "inferred_gene": {
               "description": "The gene to which the phenotype is inferred to be associated.",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "object": {
               "description": "phenotype statement: The label of an individual phenotype term from a phenotype ontology or the post-composed statement of the phenotype from a post-composed terminology",
               "type": "string"
            },
            "phenotype_term": {
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "single_reference": {
               "description": "The reference in which the phenotype association was asserted/reported.",
               "type": "string"
            },
            "subject": {
               "description": "The AGM to which the phenotype ontology term is associated.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "predicate",
            "curie",
            "object",
            "creation_date",
            "created_by",
            "modified_by",
            "subject"
         ],
         "title": "AGMPhenotypeAnnotation",
         "type": "object"
      },
      "AffectedGenomicModel": {
         "additionalProperties": false,
         "description": "Includes inbred strains, stocks, disease models and mutant genotypes",
         "properties": {
            "components": {
               "description": "Collection of genomic components that make up a model, i.e. 'allele', each with a zygosity",
               "items": {
                  "$ref": "#/$defs/AffectedGenomicModelComponent"
               },
               "type": "array"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "data_provider": {
               "description": "Organization (e.g. MOD) from which the data was sourced",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "parental_populations": {
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "sequence_targeting_reagents": {
               "items": {
                  "$ref": "#/$defs/SequenceTargetingReagent"
               },
               "type": "array"
            },
            "subtype": {
               "$ref": "#/$defs/SubtypeValues",
               "description": "Subtype of affected genomic model"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The taxon from which the biological entity derives.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "taxon",
            "created_by",
            "modified_by"
         ],
         "title": "AffectedGenomicModel",
         "type": "object"
      },
      "AffectedGenomicModelComponent": {
         "additionalProperties": false,
         "description": "Allele that affects the model and its zygosity",
         "properties": {
            "has_allele": {
               "type": "string"
            },
            "zygosity": {
               "$ref": "#/$defs/ZygosityValues",
               "description": "GENO onotology ID for allele zygosity"
            }
         },
         "required": [],
         "title": "AffectedGenomicModelComponent",
         "type": "object"
      },
      "Agent": {
         "additionalProperties": false,
         "description": "An individual, group, organization or project that provides information and/or materials.",
         "properties": {},
         "required": [],
         "title": "Agent",
         "type": "object"
      },
      "AggregationDatabaseEnum": {
         "description": "",
         "enum": [
            "mi:0670"
         ],
         "title": "AggregationDatabaseEnum",
         "type": "string"
      },
      "Allele": {
         "additionalProperties": false,
         "description": "One of multiple possible forms of a functional genomic element (most often described as a locus or gene), differing from the reference DNA sequence.  The genomic element can be endogenous or constructed.",
         "properties": {
            "aberration": {
               "description": "Associated deficiency (etc.) whose breakpoint causes the mutation",
               "type": "string"
            },
            "associated_references": {
               "description": "List of references associated with the entity in some way with a description of the association.",
               "items": {
                  "$ref": "#/$defs/AssociatedReference"
               },
               "type": "array"
            },
            "contains_constructs": {
               "items": {
                  "$ref": "#/$defs/Construct"
               },
               "type": "array"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "database_status": {
               "description": "Database status of the allele",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "embryonic_cell_lines": {
               "type": "string"
            },
            "embryonic_stem_cell_lines": {
               "description": "Embryonic stem cell lines known to carry the allele",
               "items": {
                  "$ref": "#/$defs/CellLine"
               },
               "type": "array"
            },
            "functional_impact": {
               "description": "Experimentally assessed functional impact of the allele, e.g. knockout / amorphic",
               "type": "string"
            },
            "generation_method": {
               "description": "Technique used to create the allele, e.g. spontaneous / naturally occuring / radiation",
               "type": "string"
            },
            "germline_transmission_status": {
               "description": "For alleles made in cell lines, have they been transmitted to the germline of an animal",
               "type": "string"
            },
            "images": {
               "description": "Any associated image",
               "type": "string"
            },
            "in_collection": {
               "description": "Set of high-throughput alleles made by large projects",
               "type": "string"
            },
            "inheritence_mode": {
               "description": "Mode of inheritence, e.g. dominant / semi-dominant / recessive / unknown",
               "type": "string"
            },
            "is_extinct": {
               "description": "Does the allele still exist in a population somewhere?",
               "type": "boolean"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "molecular_mutations": {
               "description": "Description of the DNA changes if precise genomic location unknown",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "mutant_cell_lines": {
               "description": "Mutant cell lines known to carry the allele",
               "items": {
                  "$ref": "#/$defs/CellLine"
               },
               "type": "array"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "origins": {
               "description": "Affected genomic models that the allele was introduced in",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "parent_cell_line": {
               "$ref": "#/$defs/CellLine",
               "description": "Parental cell line of alleles made in embryonic stem cells"
            },
            "related_notes": {
               "description": "Holds between an object and a list of related Note objects.",
               "items": {
                  "$ref": "#/$defs/Note"
               },
               "type": "array"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "sequencing_status": {
               "description": "Status of whether or not the variant genomic location has been verified by sequencing",
               "type": "string"
            },
            "symbol": {
               "description": "Symbol for a particular thing",
               "type": "string"
            },
            "synonyms": {
               "description": "synonyms for allele names and synonyms",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The taxon from which the biological entity derives.",
               "type": "string"
            },
            "transposon_insertion": {
               "description": "Associated transposon insertion that causes the mutation",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "taxon",
            "created_by",
            "modified_by"
         ],
         "title": "Allele",
         "type": "object"
      },
      "AlleleDiseaseAnnotation": {
         "additionalProperties": false,
         "description": "An annotation asserting an association between an allele and a disease supported by evidence.",
         "properties": {
            "annotation_type": {
               "description": "The type of annotation classified according to curation method. Submitted value should be a vocabulary term from the 'Annotation types' vocabulary",
               "type": "string"
            },
            "condition_relations": {
               "items": {
                  "$ref": "#/$defs/ConditionRelation"
               },
               "type": "array"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "data_provider": {
               "description": "Organization (e.g. MOD) from which the data was sourced",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "disease_genetic_modifier": {
               "description": "Specifies a genetic object that modifies the disease model. May be a gene, allele, AGM.",
               "type": "string"
            },
            "disease_genetic_modifier_relation": {
               "description": "A relation describing how the genetic modifier modifies the disease model. Submitted value should be a vocabulary term from the 'Disease genetic modifiers' vocabulary",
               "type": "string"
            },
            "disease_qualifiers": {
               "description": "Submitted values should be vocabulary terms from the 'Disease Qualifiers' vocabulary",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "evidence_codes": {
               "description": "ECO term IDs",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "genetic_sex": {
               "description": "Submitted value should be a vocabulary term from the 'Genetic sexes' vocabulary",
               "type": "string"
            },
            "inferred_gene": {
               "description": "The gene to which the disease is inferred to be associated.",
               "type": "string"
            },
            "mod_entity_id": {
               "description": "The model organism database (MOD) identifier/curie for the disease annotation. Currently only used by WormBase for disease annotations, e.g. \"WBDOannot00000907\"",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "negated": {
               "description": "The negative qualifier for the annotation.",
               "type": "boolean"
            },
            "object": {
               "description": "The disease ontology term.",
               "type": "string"
            },
            "predicate": {
               "description": "The relationship between allele and disease. Submitted value should be a vocabulary term from the 'Allele disease relations' vocabulary",
               "type": "string"
            },
            "related_notes": {
               "description": "Holds between an object and a list of related Note objects.",
               "items": {
                  "$ref": "#/$defs/Note"
               },
               "type": "array"
            },
            "secondary_data_provider": {
               "description": "Organization (e.g. MOD) that provided the data directly to the Alliance, but not the original source",
               "type": "string"
            },
            "single_reference": {
               "description": "The reference in which the disease association was asserted/reported.",
               "type": "string"
            },
            "subject": {
               "description": "The allele to which the disease ontology term is associated.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "unique_id": {
               "description": "Unique identifer for the disease annotation.  Will be generated at AGR if not submitted by the MOD.",
               "type": "string"
            },
            "with": {
               "description": "A field for disease annotations that captures the human gene the implicated MOD gene is homologous or orthologous to when using the ISS (inferred from sequence similarity) evidence code or the ISO (inferred from sequence orthology) evidence code. The assertion would state that the MOD gene is implicated in the indicated disease based on sequence-similarity/sequence-orthology \"with\" some human gene. Currently used by SGD.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "evidence_codes",
            "single_reference",
            "data_provider",
            "object",
            "created_by",
            "modified_by",
            "subject",
            "predicate"
         ],
         "title": "AlleleDiseaseAnnotation",
         "type": "object"
      },
      "AlleleGeneAssociation": {
         "additionalProperties": false,
         "description": "Association between an allele and a gene",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "evidence_code": {
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "object": {
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "related_note": {
               "$ref": "#/$defs/Note",
               "description": "Holds between an object and a Note object."
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "subject": {
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "subject",
            "predicate",
            "created_by",
            "modified_by",
            "object"
         ],
         "title": "AlleleGeneAssociation",
         "type": "object"
      },
      "AllelePhenotypeAnnotation": {
         "additionalProperties": false,
         "description": "An annotation asserting an association between an allele and a phenotype supported by evidence.",
         "properties": {
            "condition_relations": {
               "items": {
                  "$ref": "#/$defs/ConditionRelation"
               },
               "type": "array"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date of curation at the source (MOD) database.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "inferred_gene": {
               "description": "The gene to which the phenotype is inferred to be associated.",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "object": {
               "description": "phenotype statement: The label of an individual phenotype term from a phenotype ontology or the post-composed statement of the phenotype from a post-composed terminology",
               "type": "string"
            },
            "phenotype_term": {
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "single_reference": {
               "description": "The reference in which the phenotype association was asserted/reported.",
               "type": "string"
            },
            "subject": {
               "description": "The allele to which the phenotype ontology term is associated.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "predicate",
            "curie",
            "object",
            "creation_date",
            "created_by",
            "modified_by",
            "subject"
         ],
         "title": "AllelePhenotypeAnnotation",
         "type": "object"
      },
      "AlleleProteinAssociation": {
         "additionalProperties": false,
         "description": "Association between an allele and a protein",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "evidence_code": {
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "object": {
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "related_note": {
               "$ref": "#/$defs/Note",
               "description": "Holds between an object and a Note object."
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "subject": {
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "subject",
            "predicate",
            "created_by",
            "modified_by",
            "object"
         ],
         "title": "AlleleProteinAssociation",
         "type": "object"
      },
      "AlleleTranscriptAssociation": {
         "additionalProperties": false,
         "description": "Association between an allele and a transcript",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "evidence_code": {
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "object": {
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "related_note": {
               "$ref": "#/$defs/Note",
               "description": "Holds between an object and a Note object."
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "subject": {
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "subject",
            "predicate",
            "created_by",
            "modified_by",
            "object"
         ],
         "title": "AlleleTranscriptAssociation",
         "type": "object"
      },
      "AlleleVariantAssociation": {
         "additionalProperties": false,
         "description": "The relationship between an allele and a variant is many to many. An Allele may have many variants and a variant can be present in many alleles.",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "evidence_code": {
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "object": {
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "related_note": {
               "$ref": "#/$defs/Note",
               "description": "Holds between an object and a Note object."
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "subject": {
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "predicate",
            "created_by",
            "modified_by",
            "subject",
            "object"
         ],
         "title": "AlleleVariantAssociation",
         "type": "object"
      },
      "AnatomicalSite": {
         "additionalProperties": false,
         "description": "The developmental stage and/or age of the specimen in an annotation.",
         "properties": {
            "anatomical_structure": {
               "type": "string"
            },
            "anatomical_substructure": {
               "type": "string"
            },
            "cellular_component": {
               "type": "string"
            },
            "spatial_qualifiers": {
               "$ref": "#/$defs/SpatialQualifierSet",
               "description": "Qualifiers that describe the spatial characteristics of an event."
            }
         },
         "required": [],
         "title": "AnatomicalSite",
         "type": "object"
      },
      "Antibody": {
         "additionalProperties": false,
         "description": "Immunoglobulin proteins that bind specific molecule(s). Can be used experimentally for the purposes of detection or purification.",
         "properties": {
            "antibody_target_genes": {
               "description": "The genes whose gene products are recognized by the antibody.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "antigen_taxon": {
               "description": "Holds between an Antibody and the species from which the antigen originates (as represented by taxon).",
               "type": "string"
            },
            "clonality": {
               "$ref": "#/$defs/AntibodyClonalitySet",
               "description": "The clonality of the antibody: e.g., monoclonal."
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for the antibody: e.g., WBAntibody0000001.",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "generated_by": {
               "description": "Holds between a material entity and an Agent that generated it: e.g., Thomas Blumenthal, Kornberg Laboratory.",
               "items": {
                  "$ref": "#/$defs/Agent"
               },
               "type": "array"
            },
            "heavy_chain_isotype": {
               "$ref": "#/$defs/HeavyChainIsotypeSet",
               "description": "The isotype of the antibody heavy chain: e.g., IgA."
            },
            "light_chain_isotype": {
               "$ref": "#/$defs/LightChainIsotypeSet",
               "description": "The isotype of the antibody light chain: e.g., i4."
            },
            "manufactured_by": {
               "description": "Holds between a material entity and an Agent that has manufactured it: e.g., Molecular Probes.",
               "items": {
                  "$ref": "#/$defs/Agent"
               },
               "type": "array"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "name": {
               "description": "Publicly displayed name of the antibody. It often includes the name of the antibody target: e.g., anti-WNT-4. It may also include the host species and antibody clonality.",
               "type": "string"
            },
            "original_reference": {
               "description": "The reference providing the original description of the antibody's generation.",
               "type": "string"
            },
            "references": {
               "description": "holds between an object and a list of references",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "related_notes": {
               "description": "Holds between an object and a list of related Note objects.",
               "items": {
                  "$ref": "#/$defs/Note"
               },
               "type": "array"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The species in which the antibody was raised: e.g., mouse, rabbit, guinea pig, goat, camel, etc.",
               "type": "string"
            }
         },
         "required": [
            "created_by",
            "modified_by",
            "name",
            "clonality",
            "curie"
         ],
         "title": "Antibody",
         "type": "object"
      },
      "AntibodyClonalitySet": {
         "description": "",
         "enum": [
            "monoclonal",
            "polyclonal",
            "unspecified"
         ],
         "title": "AntibodyClonalitySet",
         "type": "string"
      },
      "AntibodyNoteTypeSet": {
         "description": "",
         "enum": [
            "antibody_description",
            "antigen_description",
            "remark",
            "private"
         ],
         "title": "AntibodyNoteTypeSet",
         "type": "string"
      },
      "Assembly": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "Assembly",
         "type": "object"
      },
      "AssociatedReference": {
         "additionalProperties": false,
         "description": "Describes the relation between a reference and an object",
         "properties": {
            "reference_type": {
               "description": "Description of how a reference is associated with an entity, e.g. molecular / origin / other",
               "type": "string"
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            }
         },
         "required": [
            "reference_type"
         ],
         "title": "AssociatedReference",
         "type": "object"
      },
      "Association": {
         "additionalProperties": false,
         "description": "A typed association between two entities, supported by evidence.",
         "properties": {
            "object": {
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "subject": {
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            }
         },
         "required": [
            "subject",
            "predicate",
            "object"
         ],
         "title": "Association",
         "type": "object"
      },
      "AuthorReference": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "corresponding_author": {
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "first_name": {
               "description": "first name of a person",
               "type": "string"
            },
            "initials": {
               "type": "string"
            },
            "last_name": {
               "description": "last (family) name of a person",
               "type": "string"
            },
            "middle_name": {
               "description": "middle names of a person",
               "type": "string"
            }
         },
         "required": [],
         "title": "AuthorReference",
         "type": "object"
      },
      "CHEBITerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "formula": {
               "description": "Formula of the molecule",
               "type": "string"
            },
            "inchi": {
               "description": "InChi style description of the molecule",
               "type": "string"
            },
            "inchi_key": {
               "description": "InChi key description of the molecule",
               "type": "string"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "iupac": {
               "description": "IUPAC name of the molecule",
               "type": "string"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "smiles": {
               "description": "Molecular structure in SMILES format",
               "type": "string"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "CHEBITerm",
         "type": "object"
      },
      "CLTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "CLTerm",
         "type": "object"
      },
      "CellLine": {
         "additionalProperties": false,
         "description": "Dummy cell line class",
         "properties": {},
         "required": [],
         "title": "CellLine",
         "type": "object"
      },
      "Chromosome": {
         "additionalProperties": false,
         "description": "The ID of the landmark used to establish the coordinate system for the current feature.",
         "properties": {
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "Chromosome",
         "type": "object"
      },
      "Company": {
         "additionalProperties": false,
         "description": "",
         "properties": {},
         "required": [],
         "title": "Company",
         "type": "object"
      },
      "ConditionRelation": {
         "additionalProperties": false,
         "description": "A pairing of an experimental condition relation (i.e. has_condition) with a list of 1 or more ExperimentalCondition objects. Annotation objects can connect directly to a set of 0 or more of these ConditionRelation objects via a 'condition_relations' slot to express the experimental conditions relevant to the annotation.",
         "properties": {
            "condition_relation_type": {
               "description": "Submitted value should be a vocabulary term from the 'Condition relation types' vocabulary",
               "type": "string"
            },
            "conditions": {
               "items": {
                  "$ref": "#/$defs/ExperimentalCondition"
               },
               "type": "array"
            },
            "handle": {
               "description": "A slot pointing to a free-text alias or 'handle' for a data object, such as a reference-specific alias for a data object used while curating.",
               "type": "string"
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "unique_id": {
               "description": "Unique identifer for the condition relation.  Will be generated at AGR.",
               "type": "string"
            }
         },
         "required": [
            "condition_relation_type"
         ],
         "title": "ConditionRelation",
         "type": "object"
      },
      "Construct": {
         "additionalProperties": false,
         "description": "Dummy construct class",
         "properties": {},
         "required": [],
         "title": "Construct",
         "type": "object"
      },
      "CrossReference": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "display_name": {
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "page_areas": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "prefix": {
               "description": "Denormalization to help with classifying types of crossReferences, distinguishing DOIs from PMC ids, etc.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "curie",
            "created_by",
            "modified_by",
            "page_areas",
            "display_name",
            "prefix"
         ],
         "title": "CrossReference",
         "type": "object"
      },
      "DAOTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "DAOTerm",
         "type": "object"
      },
      "DNAClone": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "generated_by": {
               "description": "Holds between a material entity and an Agent that generated it: e.g., Thomas Blumenthal, Kornberg Laboratory.",
               "items": {
                  "$ref": "#/$defs/Agent"
               },
               "type": "array"
            },
            "manufactured_by": {
               "description": "Holds between a material entity and an Agent that has manufactured it: e.g., Molecular Probes.",
               "items": {
                  "$ref": "#/$defs/Agent"
               },
               "type": "array"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The taxon from which the biological entity derives.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "taxon",
            "created_by",
            "modified_by"
         ],
         "title": "DNAClone",
         "type": "object"
      },
      "DOTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "DOTerm",
         "type": "object"
      },
      "DetectionMethodsEnum": {
         "description": "",
         "enum": [
            "mi:0084",
            "mi:0364",
            "mi:0089",
            "mi:0001",
            "mi:0363",
            "mi:0880",
            "mi:0081",
            "mi:0115",
            "mi:0512",
            "mi:1204",
            "mi:1203",
            "mi:0872",
            "mi:0114",
            "mi:0510",
            "mi:0515",
            "mi:0516",
            "mi:0998",
            "mi:0073",
            "mi:0232",
            "mi:0111",
            "mi:0870",
            "mi:0991",
            "mi:0112",
            "mi:0077",
            "mi:0990",
            "mi:0231",
            "mi:0071",
            "mi:0905",
            "mi:0588",
            "mi:0104",
            "mi:0225",
            "mi:0984",
            "mi:0226",
            "mi:1314",
            "mi:0069",
            "mi:0982",
            "mi:1313",
            "mi:1038",
            "mi:1037",
            "mi:1312",
            "mi:0108",
            "mi:0900",
            "mi:0227",
            "mi:0107",
            "mi:0067",
            "mi:1311",
            "mi:0101",
            "mi:0065",
            "mi:0066",
            "mi:0858",
            "mi:0979",
            "mi:0859",
            "mi:1309",
            "mi:1147",
            "mi:0052",
            "mi:0053",
            "mi:0051",
            "mi:1024",
            "mi:0695",
            "mi:0054",
            "mi:0055",
            "mi:1022",
            "mi:2193",
            "mi:2192",
            "mi:2191",
            "mi:0728",
            "mi:0729",
            "mi:0605",
            "mi:0968",
            "mi:0606",
            "mi:0969",
            "mi:0727",
            "mi:0049",
            "mi:0841",
            "mi:0047",
            "mi:1016",
            "mi:1137",
            "mi:0686",
            "mi:0048",
            "mi:0964",
            "mi:1019",
            "mi:0042",
            "mi:2340",
            "mi:0040",
            "mi:0045",
            "mi:0046",
            "mi:2189",
            "mi:0440",
            "mi:0676",
            "mi:0038",
            "mi:0434",
            "mi:1007",
            "mi:0435",
            "mi:0432",
            "mi:1247",
            "mi:0399",
            "mi:1005",
            "mi:1246",
            "mi:0438",
            "mi:0953",
            "mi:0678",
            "mi:0437",
            "mi:1008",
            "mi:2339",
            "mi:0030",
            "mi:0031",
            "mi:0276",
            "mi:0397",
            "mi:0430",
            "mi:2213",
            "mi:0398",
            "mi:1088",
            "mi:1000",
            "mi:0949",
            "mi:0825",
            "mi:0946",
            "mi:0826",
            "mi:0947",
            "mi:0027",
            "mi:0423",
            "mi:0424",
            "mi:0028",
            "mi:0663",
            "mi:1235",
            "mi:1356",
            "mi:0944",
            "mi:0428",
            "mi:0824",
            "mi:0029",
            "mi:0425",
            "mi:0426",
            "mi:0943",
            "mi:0020",
            "mi:2169",
            "mi:0420",
            "mi:1232",
            "mi:1352",
            "mi:0814",
            "mi:0419",
            "mi:0412",
            "mi:0016",
            "mi:0413",
            "mi:0017",
            "mi:0655",
            "mi:0410",
            "mi:1104",
            "mi:0014",
            "mi:0894",
            "mi:0411",
            "mi:1103",
            "mi:0416",
            "mi:0813",
            "mi:0417",
            "mi:0018",
            "mi:0415",
            "mi:0019",
            "mi:0657",
            "mi:0096",
            "mi:0097",
            "mi:1183",
            "mi:0370",
            "mi:0892",
            "mi:0012",
            "mi:0254",
            "mi:0013",
            "mi:0010",
            "mi:0011",
            "mi:0099",
            "mi:0090",
            "mi:0091",
            "mi:0809",
            "mi:0807",
            "mi:0928",
            "mi:0808",
            "mi:0401",
            "mi:0402",
            "mi:0006",
            "mi:0369",
            "mi:0004",
            "mi:0400",
            "mi:0405",
            "mi:0889",
            "mi:0406",
            "mi:0007",
            "mi:0887",
            "mi:0920",
            "mi:1218",
            "mi:0404",
            "mi:0008",
            "mi:0888",
            "mi:0921"
         ],
         "title": "DetectionMethodsEnum",
         "type": "string"
      },
      "ECOTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "abbreviation": {
               "description": "Letter code used by curators to refer to the ECO term.",
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "ECOTerm",
         "type": "object"
      },
      "EMAPATerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "EMAPATerm",
         "type": "object"
      },
      "Entity": {
         "additionalProperties": false,
         "description": "",
         "properties": {},
         "required": [],
         "title": "Entity",
         "type": "object"
      },
      "EntityStatement": {
         "additionalProperties": false,
         "description": "Free-text describing some aspect of an entity.",
         "properties": {
            "references": {
               "description": "holds between an object and a list of references",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "statement_subject": {
               "description": "The entity being described by the note.",
               "type": "string"
            },
            "statement_text": {
               "description": "Free-text describing some aspect of an entity.",
               "type": "string"
            },
            "statement_type": {
               "description": "The type of free-text statement. For example: cytology, private, curator_comments.",
               "type": "string"
            }
         },
         "required": [],
         "title": "EntityStatement",
         "type": "object"
      },
      "EntitySynonym": {
         "additionalProperties": false,
         "description": "A relationship between an entity and a synonym.",
         "properties": {
            "object": {
               "$ref": "#/$defs/Synonym",
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
            },
            "predicate": {
               "$ref": "#/$defs/EntitySynonymTypeSet",
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type."
            },
            "references": {
               "description": "The references in which the synonym is used to refer to the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subject": {
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            }
         },
         "required": [
            "subject",
            "object",
            "predicate"
         ],
         "title": "EntitySynonym",
         "type": "object"
      },
      "EntitySynonymTypeSet": {
         "description": "",
         "enum": [
            "current",
            "alias"
         ],
         "title": "EntitySynonymTypeSet",
         "type": "string"
      },
      "ExperimentalCondition": {
         "additionalProperties": false,
         "description": "The environmental context in which an experiment is carried out. This may (e.g. drug treatment) or may not (e.g. standard conditions) directly influence the outcome of the experiment.",
         "properties": {
            "condition_anatomy": {
               "description": "Anatomical ontology identifier used in cases like regeneration/wounding.",
               "type": "string"
            },
            "condition_chemical": {
               "description": "ChEBI or molecular ontology id used in subset of condition terms.  ie: the specific chemcial used in conjunction with 'chemical condition'.",
               "type": "string"
            },
            "condition_class": {
               "description": "The ZECO ID that represents the high level condition grouping term.  This will come from a slim in the ZECO, called 'AllianceSlim'.",
               "type": "string"
            },
            "condition_free_text": {
               "description": "Free-text description of the experimental condition",
               "type": "string"
            },
            "condition_gene_ontology": {
               "description": "Gene Ontology id used in subset of condition types.",
               "type": "string"
            },
            "condition_id": {
               "description": "The specific ontology ID for the condition when that is not covered by any of the other condition ontology ID attributes (chemical, NCBITaxon, anatomical). This could also be another ZECO term if the ZECO term that describes this condition is more specific, or outside the conditionClassId slim.",
               "type": "string"
            },
            "condition_quantity": {
               "description": "Optional free text field that records the units/amount/degrees of a condition.",
               "type": "string"
            },
            "condition_statement": {
               "description": "Free text describing the environmental/experimental condition. For some groups this is a single term, others is it is a concatenation of the term names from the ontologies included in this data structure. To be submitted by DQMs; eventually will be deprecated once DQMs no longer submit these ExperimentalCondition objects.",
               "type": "string"
            },
            "condition_summary": {
               "description": "Free text describing the environmental/experimental condition. For some groups this is a single term, others is it is a concatenation of the term names from the ontologies included in this data structure. Similar to condition_statement except the condition_summary will not be submitted by DQMs but rather generated at the Alliance after ingest (or generated/updated in the curation interface and persistent store).",
               "type": "string"
            },
            "condition_taxon": {
               "description": "NCBITaxon ontology id used in subset of condition types like 'bacterial infection'.",
               "type": "string"
            },
            "unique_id": {
               "description": "Unique identifer for the experimental condition.  Will be generated at AGR.",
               "type": "string"
            }
         },
         "required": [
            "condition_class",
            "condition_statement"
         ],
         "title": "ExperimentalCondition",
         "type": "object"
      },
      "ExpressionAnnotation": {
         "additionalProperties": false,
         "description": "A description of when and where gene products are observed to be present, including experimental details, supporting evidence, and curator notes.",
         "properties": {
            "associated_with_figure": {
               "description": "The figure(s) that support(s) the expression annotation.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "belongs_to_expression_experiment": {
               "description": "Holds between an ExpressionAnnotation and an ExpressionExperiment.",
               "type": "string"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "expression_qualifiers": {
               "$ref": "#/$defs/ExpressionQualifierSet",
               "description": "Qualifiers that describe additional characteristics of gene expression. For example: aint, intense, restricted."
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "negated": {
               "description": "if set to true, then the association is negated i.e. is not true",
               "type": "boolean"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "uncertain": {
               "description": "If set to true, then the related entity is uncertain.",
               "type": "boolean"
            },
            "when_expressed": {
               "$ref": "#/$defs/TemporalContext",
               "description": "When a gene product is observed to be present."
            },
            "where_expressed": {
               "$ref": "#/$defs/AnatomicalSite",
               "description": "Where a gene product is observed to be present."
            }
         },
         "required": [
            "belongs_to_expression_experiment",
            "created_by",
            "modified_by"
         ],
         "title": "ExpressionAnnotation",
         "type": "object"
      },
      "ExpressionAnnotationImagePane": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "object": {
               "$ref": "#/$defs/ImagePane",
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "subject": {
               "$ref": "#/$defs/ExpressionAnnotation",
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
            }
         },
         "required": [
            "predicate",
            "subject",
            "object"
         ],
         "title": "ExpressionAnnotationImagePane",
         "type": "object"
      },
      "ExpressionAnnotationStatement": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "references": {
               "description": "holds between an object and a list of references",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "statement_subject": {
               "$ref": "#/$defs/ExpressionAnnotation",
               "description": "The entity being described by the note."
            },
            "statement_text": {
               "description": "Free-text describing some aspect of an entity.",
               "type": "string"
            },
            "statement_type": {
               "$ref": "#/$defs/ExpressionStatementTypeEnum",
               "description": "The type of free-text statement. For example: cytology, private, curator_comments."
            }
         },
         "required": [],
         "title": "ExpressionAnnotationStatement",
         "type": "object"
      },
      "ExpressionConditionRelationEnum": {
         "description": "",
         "enum": [
            "has_condition",
            "induced_by"
         ],
         "title": "ExpressionConditionRelationEnum",
         "type": "string"
      },
      "ExpressionExperiment": {
         "additionalProperties": false,
         "description": "Defined by the gene of interest, the specimen, the assay, the reagents (Antibody, Probe), and the reference. It groups ExpressionAnnotations.",
         "properties": {
            "assay_used": {
               "description": "The assay used to experimentally determine gene expression.",
               "type": "string"
            },
            "biological_entity_assayed": {
               "description": "Holds between a BiologicalEntity and an ExpressionExperiment that reports on its expression.",
               "type": "string"
            },
            "condition_relations": {
               "items": {
                  "$ref": "#/$defs/ConditionRelation"
               },
               "type": "array"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "reagents_used": {
               "description": "Reagents used in the expression assay: e.g., antibodies, probes.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "specimen_alleles": {
               "description": "The Allele(s) of the specimen assayed.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "specimen_genomic_model": {
               "description": "The AffectedGenomicModel of the specimen assayed.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "curie",
            "created_by",
            "modified_by"
         ],
         "title": "ExpressionExperiment",
         "type": "object"
      },
      "ExpressionExperimentStatement": {
         "additionalProperties": false,
         "description": "Free-text describing some aspect(s) of a gene's expression, particularly nuanced information that is not readily captured in annotations. This statement's scope is limited to the associated ExpressionExperiment.",
         "properties": {
            "references": {
               "description": "holds between an object and a list of references",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "statement_subject": {
               "description": "The entity being described by the note.",
               "type": "string"
            },
            "statement_text": {
               "description": "Free-text describing some aspect of an entity.",
               "type": "string"
            },
            "statement_type": {
               "description": "The type of free-text statement. For example: cytology, private, curator_comments.",
               "type": "string"
            }
         },
         "required": [],
         "title": "ExpressionExperimentStatement",
         "type": "object"
      },
      "ExpressionQualifierSet": {
         "description": "",
         "enum": [
            "strong",
            "moderate",
            "faint",
            "endogenous",
            "granular",
            "intense",
            "punctate",
            "uniform",
            "non-uniform",
            "variable",
            "clusters",
            "diffuse",
            "graded",
            "not_specified",
            "patchy",
            "regionally_restricted",
            "scattered",
            "single_cells",
            "spotted",
            "ubiquitous",
            "widespread"
         ],
         "title": "ExpressionQualifierSet",
         "type": "string"
      },
      "ExpressionStatementTypeEnum": {
         "description": "",
         "enum": [
            "expression_summary",
            "when_expressed_note",
            "where_expressed_note",
            "expression_annotation_note"
         ],
         "title": "ExpressionStatementTypeEnum",
         "type": "string"
      },
      "ExternalDatabaseLink": {
         "additionalProperties": false,
         "description": "Base relation that holds the identifier prefix, base url and url suffix to help in generating URLs in crossReferences.",
         "properties": {
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "prefix": {
               "description": "Denormalization to help with classifying types of crossReferences, distinguishing DOIs from PMC ids, etc.",
               "type": "string"
            },
            "prefix_order": {
               "description": "The relative order of the resource when listed with other crossReferences.",
               "type": "string"
            },
            "prefix_page": {
               "description": "The cateogry of pages the resource in the context of the URL associated with the crossReference provides.  Equivalent to the 'page' attribute in the Alliance resourceDescriptor file.",
               "type": "string"
            },
            "url_prefix": {
               "description": "The prefix of the url before the accession number.",
               "type": "string"
            },
            "url_suffix": {
               "description": "The suffix of the url after the accession number.",
               "type": "string"
            }
         },
         "required": [
            "prefix"
         ],
         "title": "ExternalDatabaseLink",
         "type": "object"
      },
      "FBCVTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "FBCVTerm",
         "type": "object"
      },
      "FBDVTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "FBDVTerm",
         "type": "object"
      },
      "Figure": {
         "additionalProperties": false,
         "description": "An entity representing a figure or table in a publication.",
         "properties": {
            "caption": {
               "description": "Text describing the contents of a figure or table in a publication.",
               "type": "string"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "label": {
               "description": "A short display name for the figure. For example: Figure 2, Figure 3B",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "curie",
            "single_reference",
            "created_by",
            "modified_by"
         ],
         "title": "Figure",
         "type": "object"
      },
      "File": {
         "additionalProperties": false,
         "description": "A dummy object.",
         "properties": {},
         "required": [],
         "title": "File",
         "type": "object"
      },
      "GOTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "GOTerm",
         "type": "object"
      },
      "Gene": {
         "additionalProperties": false,
         "description": "Placeholder.",
         "properties": {
            "automated_gene_description": {
               "description": "Gene description generated via algorithm developed at the alliance.",
               "type": "string"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "gene_synopsis": {
               "description": "Gene description provided by source resource (ie: MOD gene description that is curated or automated via MOD internal processes).",
               "type": "string"
            },
            "gene_synopsis_URL": {
               "description": "Gene description reference URL provided by source resource (aka: MOD) in the case where the curated gene_synopsis has a reference URL outside of the MOD.",
               "type": "string"
            },
            "gene_type": {
               "description": "SOTerm describing gene type",
               "type": "string"
            },
            "genomic_locations": {
               "items": {
                  "$ref": "#/$defs/GeneGenomicLocation"
               },
               "type": "array"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "symbol": {
               "description": "Symbol for a particular thing",
               "type": "string"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The taxon from which the biological entity derives.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "taxon",
            "created_by",
            "modified_by",
            "symbol"
         ],
         "title": "Gene",
         "type": "object"
      },
      "GeneDiseaseAnnotation": {
         "additionalProperties": false,
         "description": "An annotation asserting an association between a gene and a disease supported by evidence.",
         "properties": {
            "annotation_type": {
               "description": "The type of annotation classified according to curation method. Submitted value should be a vocabulary term from the 'Annotation types' vocabulary",
               "type": "string"
            },
            "condition_relations": {
               "items": {
                  "$ref": "#/$defs/ConditionRelation"
               },
               "type": "array"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "data_provider": {
               "description": "Organization (e.g. MOD) from which the data was sourced",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "disease_genetic_modifier": {
               "description": "Specifies a genetic object that modifies the disease model. May be a gene, allele, AGM.",
               "type": "string"
            },
            "disease_genetic_modifier_relation": {
               "description": "A relation describing how the genetic modifier modifies the disease model. Submitted value should be a vocabulary term from the 'Disease genetic modifiers' vocabulary",
               "type": "string"
            },
            "disease_qualifiers": {
               "description": "Submitted values should be vocabulary terms from the 'Disease Qualifiers' vocabulary",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "evidence_codes": {
               "description": "ECO term IDs",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "genetic_sex": {
               "description": "Submitted value should be a vocabulary term from the 'Genetic sexes' vocabulary",
               "type": "string"
            },
            "mod_entity_id": {
               "description": "The model organism database (MOD) identifier/curie for the disease annotation. Currently only used by WormBase for disease annotations, e.g. \"WBDOannot00000907\"",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "negated": {
               "description": "The negative qualifier for the annotation.",
               "type": "boolean"
            },
            "object": {
               "description": "The disease ontology term.",
               "type": "string"
            },
            "predicate": {
               "description": "The relationship between gene and disease. Submitted value should be a vocabulary term from the 'Gene disease relations' vocabulary",
               "type": "string"
            },
            "related_notes": {
               "description": "Holds between an object and a list of related Note objects.",
               "items": {
                  "$ref": "#/$defs/Note"
               },
               "type": "array"
            },
            "secondary_data_provider": {
               "description": "Organization (e.g. MOD) that provided the data directly to the Alliance, but not the original source",
               "type": "string"
            },
            "sgd_strain_background": {
               "type": "string"
            },
            "single_reference": {
               "description": "The reference in which the disease association was asserted/reported.",
               "type": "string"
            },
            "subject": {
               "description": "The gene to which the disease ontology term is associated.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "unique_id": {
               "description": "Unique identifer for the disease annotation.  Will be generated at AGR if not submitted by the MOD.",
               "type": "string"
            },
            "with": {
               "description": "A field for disease annotations that captures the human gene the implicated MOD gene is homologous or orthologous to when using the ISS (inferred from sequence similarity) evidence code or the ISO (inferred from sequence orthology) evidence code. The assertion would state that the MOD gene is implicated in the indicated disease based on sequence-similarity/sequence-orthology \"with\" some human gene. Currently used by SGD.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "evidence_codes",
            "single_reference",
            "data_provider",
            "object",
            "created_by",
            "modified_by",
            "subject",
            "predicate"
         ],
         "title": "GeneDiseaseAnnotation",
         "type": "object"
      },
      "GeneExpressionStatement": {
         "additionalProperties": false,
         "description": "Free-text describing some aspect(s) of a gene's expression, particularly nuanced information that is not readily captured in annotations. May summarize data from many annotations and/or many publications.",
         "properties": {
            "references": {
               "description": "holds between an object and a list of references",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "statement_subject": {
               "description": "The entity being described by the note.",
               "type": "string"
            },
            "statement_text": {
               "description": "Free-text describing some aspect of an entity.",
               "type": "string"
            },
            "statement_type": {
               "$ref": "#/$defs/ExpressionStatementTypeEnum",
               "description": "The type of free-text statement. For example: cytology, private, curator_comments."
            }
         },
         "required": [],
         "title": "GeneExpressionStatement",
         "type": "object"
      },
      "GeneGeneticInteraction": {
         "additionalProperties": false,
         "description": "A genetic interaction between genes (e.g. phenotypic suppression)",
         "properties": {
            "cross_references": {
               "description": "Additional identifier(s) of the interaction annotation other than the primary id.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "The unique primary identifier for the interaction. This should be the source (curation) database identifier, or if that is not available then the aggregation database identifier (e.g. IMEx)",
               "type": "string"
            },
            "interaction_data_provider": {
               "$ref": "#/$defs/InteractionSourceEnum",
               "description": "The interaction database that curated the interaction. e.g. BioGRID"
            },
            "interaction_type": {
               "$ref": "#/$defs/InteractionTypeEnum",
               "description": "The type of interaction between the two genes or gene products. e.g. physical association"
            },
            "interactor_A_genetic_perturbation": {
               "type": "string"
            },
            "interactor_A_role": {
               "items": {
                  "$ref": "#/$defs/InteractorARoleEnum"
               },
               "type": "array"
            },
            "interactor_A_type": {
               "$ref": "#/$defs/InteractorTypeEnum"
            },
            "interactor_B_genetic_perturbation": {
               "type": "string"
            },
            "interactor_B_role": {
               "items": {
                  "$ref": "#/$defs/InteractorBRoleEnum"
               },
               "type": "array"
            },
            "interactor_B_type": {
               "$ref": "#/$defs/InteractorTypeEnum"
            },
            "object": {
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "phenotype_or_trait": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "references": {
               "description": "The reference from which the interaction was annotated.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subject": {
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "interaction_data_provider",
            "interaction_type",
            "interactor_A_type",
            "interactor_B_type",
            "subject",
            "object",
            "predicate"
         ],
         "title": "GeneGeneticInteraction",
         "type": "object"
      },
      "GeneGenomicLocation": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "end": {
               "description": "The end of the feature in positive 1-based integer coordinates",
               "type": "string"
            },
            "has_assembly": {
               "type": "string"
            },
            "object": {
               "description": "object should be the chromosome identifier",
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "start": {
               "description": "The start of the feature in positive 1-based integer coordinates",
               "type": "string"
            },
            "subject": {
               "description": "subject should be the gene identifier",
               "type": "string"
            }
         },
         "required": [
            "subject",
            "predicate",
            "object",
            "has_assembly"
         ],
         "title": "GeneGenomicLocation",
         "type": "object"
      },
      "GeneMolecularInteraction": {
         "additionalProperties": false,
         "description": "A physical molecular interaction between gene products (e.g. protein-protein interactions or protein-RNA interactions) or between genes and DNA-binding factors (e.g. protein-DNA interactions)",
         "properties": {
            "aggregation_database": {
               "$ref": "#/$defs/AggregationDatabaseEnum",
               "description": "The database that collected the interaction annotation from another resource and aggregated it into a consolidated resource. e.g. IMEx"
            },
            "cross_references": {
               "description": "Additional identifier(s) of the interaction annotation other than the primary id.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "The unique primary identifier for the interaction. This should be the source (curation) database identifier, or if that is not available then the aggregation database identifier (e.g. IMEx)",
               "type": "string"
            },
            "detection_method": {
               "$ref": "#/$defs/DetectionMethodsEnum",
               "description": "The experimental method used to identify the physical interaction between two molecules"
            },
            "interaction_data_provider": {
               "$ref": "#/$defs/InteractionSourceEnum",
               "description": "The interaction database that curated the interaction. e.g. BioGRID"
            },
            "interaction_type": {
               "$ref": "#/$defs/InteractionTypeEnum",
               "description": "The type of interaction between the two genes or gene products. e.g. physical association"
            },
            "interactor_A_role": {
               "items": {
                  "$ref": "#/$defs/InteractorARoleEnum"
               },
               "type": "array"
            },
            "interactor_A_type": {
               "$ref": "#/$defs/InteractorTypeEnum"
            },
            "interactor_B_role": {
               "items": {
                  "$ref": "#/$defs/InteractorBRoleEnum"
               },
               "type": "array"
            },
            "interactor_B_type": {
               "$ref": "#/$defs/InteractorTypeEnum"
            },
            "object": {
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "references": {
               "description": "The reference from which the interaction was annotated.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subject": {
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "interaction_data_provider",
            "interaction_type",
            "interactor_A_type",
            "interactor_B_type",
            "subject",
            "object",
            "predicate"
         ],
         "title": "GeneMolecularInteraction",
         "type": "object"
      },
      "GenePhenotypeAnnotation": {
         "additionalProperties": false,
         "description": "An annotation asserting an association between a gene and a phenotype supported by evidence.",
         "properties": {
            "condition_relations": {
               "items": {
                  "$ref": "#/$defs/ConditionRelation"
               },
               "type": "array"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date of curation at the source (MOD) database.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "object": {
               "description": "phenotype statement: The label of an individual phenotype term from a phenotype ontology or the post-composed statement of the phenotype from a post-composed terminology",
               "type": "string"
            },
            "phenotype_term": {
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "sgd_strain_background": {
               "type": "string"
            },
            "single_reference": {
               "description": "The reference in which the phenotype association was asserted/reported.",
               "type": "string"
            },
            "subject": {
               "description": "The gene to which the phenotype ontology term is associated.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "predicate",
            "curie",
            "object",
            "creation_date",
            "created_by",
            "modified_by",
            "subject"
         ],
         "title": "GenePhenotypeAnnotation",
         "type": "object"
      },
      "GenomicEntity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The taxon from which the biological entity derives.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "taxon",
            "created_by",
            "modified_by"
         ],
         "title": "GenomicEntity",
         "type": "object"
      },
      "HeavyChainIsotypeSet": {
         "description": "",
         "enum": [
            "IgA",
            "IgA1",
            "IgA2",
            "IgD",
            "IgE",
            "IgG",
            "IgG1",
            "IgG2",
            "IgG2a",
            "IgG2b",
            "IgG2c",
            "IgG3",
            "IgG4",
            "IgM",
            "IgN",
            "IgR",
            "IgW",
            "IgX",
            "IgY"
         ],
         "title": "HeavyChainIsotypeSet",
         "type": "string"
      },
      "Image": {
         "additionalProperties": false,
         "description": "The set of files and metadata that constitute an image.",
         "properties": {
            "associated_with_figure": {
               "description": "The figure to which the image belongs.",
               "type": "string"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "cropped_from": {
               "description": "Another larger image from which this image was cropped.",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "height": {
               "description": "The height of the image (pixels).",
               "type": "integer"
            },
            "image_file": {
               "$ref": "#/$defs/File",
               "description": "The file representing the full-sized version of this image."
            },
            "image_medium_file": {
               "$ref": "#/$defs/File",
               "description": "The file representing a medium-sized version of this image."
            },
            "image_thumbnail_file": {
               "$ref": "#/$defs/File",
               "description": "The file representing the thumbnail of this image."
            },
            "image_x_origin": {
               "description": "The x coordinate within a larger source image from which the crop begins.",
               "type": "integer"
            },
            "image_y_origin": {
               "description": "The y coordinate within a larger source image from which the crop begins.",
               "type": "integer"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "video_still": {
               "description": "An image represents a video still.",
               "type": "boolean"
            },
            "width": {
               "description": "The width of the image (pixels).",
               "type": "integer"
            }
         },
         "required": [
            "curie",
            "associated_with_figure",
            "width",
            "height",
            "image_file",
            "image_medium_file",
            "image_thumbnail_file",
            "created_by",
            "modified_by"
         ],
         "title": "Image",
         "type": "object"
      },
      "ImagePane": {
         "additionalProperties": false,
         "description": "Part of an Image that is relevant to some annotation. An annotation may reference many panes of an Image.",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "from_image": {
               "description": "Holds between an ImagePane and an Image.",
               "type": "string"
            },
            "height": {
               "description": "The height of the image (pixels).",
               "type": "integer"
            },
            "image_x_origin": {
               "description": "The x coordinate within a larger source image from which the pane begins.",
               "type": "integer"
            },
            "image_y_origin": {
               "description": "The y coordinate within a larger source image from which the pane begins.",
               "type": "integer"
            },
            "label": {
               "description": "A short display name for the figure. For example: Figure 2, Figure 3B",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "width": {
               "description": "The width of the image (pixels).",
               "type": "integer"
            }
         },
         "required": [
            "from_image",
            "width",
            "height",
            "created_by",
            "modified_by"
         ],
         "title": "ImagePane",
         "type": "object"
      },
      "Ingest": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "allele_ingest_set": {
               "items": {
                  "$ref": "#/$defs/Allele"
               },
               "type": "array"
            },
            "disease_agm_ingest_set": {
               "items": {
                  "$ref": "#/$defs/AGMDiseaseAnnotation"
               },
               "type": "array"
            },
            "disease_allele_ingest_set": {
               "items": {
                  "$ref": "#/$defs/AlleleDiseaseAnnotation"
               },
               "type": "array"
            },
            "disease_gene_ingest_set": {
               "items": {
                  "$ref": "#/$defs/GeneDiseaseAnnotation"
               },
               "type": "array"
            },
            "gene_ingest_set": {
               "items": {
                  "$ref": "#/$defs/Gene"
               },
               "type": "array"
            }
         },
         "required": [],
         "title": "Ingest",
         "type": "object"
      },
      "InteractionSourceEnum": {
         "description": "",
         "enum": [
            "mi:1263",
            "mi:0471",
            "mi:1262",
            "mi:0463",
            "mi:0486",
            "mi:1222",
            "mi:1332",
            "mi:1264",
            "mi:0903",
            "mi:0917",
            "mi:0478",
            "mi:0974",
            "mi:0487",
            "mi:0465",
            "mi:1335",
            "mi:0469"
         ],
         "title": "InteractionSourceEnum",
         "type": "string"
      },
      "InteractionTypeEnum": {
         "description": "",
         "enum": [
            "mi:1294",
            "mi:1250",
            "mi:1293",
            "mi:2388",
            "mi:1292",
            "mi:2380",
            "mi:1291",
            "mi:1290",
            "mi:0915",
            "mi:0914",
            "mi:0797",
            "mi:1127",
            "mi:0795",
            "mi:1126",
            "mi:2379",
            "mi:0559",
            "mi:0557",
            "mi:2374",
            "mi:0195",
            "mi:2373",
            "mi:1283",
            "mi:2372",
            "mi:2371",
            "mi:0194",
            "mi:2378",
            "mi:0199",
            "mi:0794",
            "mi:1288",
            "mi:2377",
            "mi:0871",
            "mi:1287",
            "mi:2376",
            "mi:0197",
            "mi:2375",
            "mi:2370",
            "mi:1280",
            "mi:0192",
            "mi:1237",
            "mi:2402",
            "mi:2369",
            "mi:1279",
            "mi:2401",
            "mi:2368",
            "mi:0945",
            "mi:1274",
            "mi:1273",
            "mi:1278",
            "mi:1310",
            "mi:1276",
            "mi:1110",
            "mi:0220",
            "mi:2364",
            "mi:0212",
            "mi:1148",
            "mi:0213",
            "mi:0216",
            "mi:0414",
            "mi:0217",
            "mi:2396",
            "mi:0570",
            "mi:0210",
            "mi:2397",
            "mi:2391",
            "mi:2390",
            "mi:0407",
            "mi:0408",
            "mi:0203",
            "mi:0566",
            "mi:0204",
            "mi:0403",
            "mi:0569",
            "mi:0844"
         ],
         "title": "InteractionTypeEnum",
         "type": "string"
      },
      "InteractorARoleEnum": {
         "description": "",
         "enum": [
            "mi:2352",
            "mi:0496",
            "mi:0584",
            "mi:2334",
            "mi:0497",
            "mi:0684",
            "mi:0582",
            "mi:2354",
            "mi:0583",
            "mi:0498",
            "mi:0499",
            "mi:2335",
            "mi:0898",
            "mi:0865",
            "mi:0503"
         ],
         "title": "InteractorARoleEnum",
         "type": "string"
      },
      "InteractorBRoleEnum": {
         "description": "",
         "enum": [
            "mi:2351",
            "mi:0581",
            "mi:0496",
            "mi:0584",
            "mi:2334",
            "mi:0497",
            "mi:0684",
            "mi:2353",
            "mi:0583",
            "mi:0498",
            "mi:0499",
            "mi:2335",
            "mi:0898",
            "mi:0865",
            "mi:0503"
         ],
         "title": "InteractorBRoleEnum",
         "type": "string"
      },
      "InteractorTypeEnum": {
         "description": "",
         "enum": [
            "mi:0250",
            "mi:0318",
            "mi:0319",
            "mi:0320",
            "mi:0324",
            "mi:0326",
            "mi:0327",
            "mi:0681",
            "mi:2190"
         ],
         "title": "InteractorTypeEnum",
         "type": "string"
      },
      "Laboratory": {
         "additionalProperties": false,
         "description": "",
         "properties": {},
         "required": [],
         "title": "Laboratory",
         "type": "object"
      },
      "LightChainIsotypeSet": {
         "description": "",
         "enum": [
            "k",
            "l",
            "l1",
            "l2",
            "l3",
            "l4",
            "r",
            "s",
            "i",
            "i1",
            "i2",
            "i3",
            "i4"
         ],
         "title": "LightChainIsotypeSet",
         "type": "string"
      },
      "LoggedInPerson": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "emails": {
               "description": "list of emails for a person",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "first_name": {
               "description": "first name of a person",
               "type": "string"
            },
            "last_name": {
               "description": "last (family) name of a person",
               "type": "string"
            },
            "middle_name": {
               "description": "middle names of a person",
               "type": "string"
            },
            "mod_entity_id": {
               "description": "The model organism database (MOD) identifier/curie for the object",
               "type": "string"
            },
            "okta_email": {
               "description": "The email address of the LoggedInPerson registered with Okta for user authentication",
               "type": "string"
            },
            "okta_id": {
               "description": "The Okta identifier for the person registered in Okta for user authentication",
               "type": "string"
            },
            "old_emails": {
               "description": "list of old (outdated) emails for a person",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "orcid": {
               "description": "Open Researcher and Contributor ID",
               "type": "string"
            },
            "unique_id": {
               "description": "A non-curie unique identifier for a thing.",
               "type": "string"
            }
         },
         "required": [
            "unique_id",
            "okta_id",
            "okta_email"
         ],
         "title": "LoggedInPerson",
         "type": "object"
      },
      "MATerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "MATerm",
         "type": "object"
      },
      "MITerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "MITerm",
         "type": "object"
      },
      "MMOTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "MMOTerm",
         "type": "object"
      },
      "MMUSDVTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "MMUSDVTerm",
         "type": "object"
      },
      "Molecule": {
         "additionalProperties": false,
         "description": "Molecules as described by WormBase",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "formula": {
               "description": "Formula of the molecule",
               "type": "string"
            },
            "inchi": {
               "description": "InChi style description of the molecule",
               "type": "string"
            },
            "inchi_key": {
               "description": "InChi key description of the molecule",
               "type": "string"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "iupac": {
               "description": "IUPAC name of the molecule",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "smiles": {
               "description": "Molecular structure in SMILES format",
               "type": "string"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie",
            "created_by",
            "modified_by"
         ],
         "title": "Molecule",
         "type": "object"
      },
      "NCBITaxonTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "NCBITaxonTerm",
         "type": "object"
      },
      "Note": {
         "additionalProperties": false,
         "description": "Note object for capturing free-text describing some attribute of an entity, coupled with a 'note type', internal boolean, and an optional list of references. Permissible values for 'note_type' currently = disease_summary, disease_note",
         "properties": {
            "free_text": {
               "description": "A free text string that describes some aspect of an entity.",
               "type": "string"
            },
            "internal": {
               "description": "Classifies the entity as private (for internal use) or not (for public use).",
               "type": "boolean"
            },
            "note_type": {
               "description": "The type of note: e.g., cytology, comment, summary. Permissible values for 'note_type' currently = disease_summary, disease_note",
               "type": "string"
            },
            "references": {
               "description": "holds between an object and a list of references",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "free_text",
            "note_type",
            "internal"
         ],
         "title": "Note",
         "type": "object"
      },
      "OntologyTerm": {
         "additionalProperties": false,
         "description": "A concept or class in an ontology, vocabulary or thesaurus. Note, ontology terms can be found in multiple ontologies (ie: mireoting). defining_slots helps define an alternative key for ontology terms.",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "OntologyTerm",
         "type": "object"
      },
      "Organization": {
         "additionalProperties": false,
         "description": "",
         "properties": {},
         "required": [],
         "title": "Organization",
         "type": "object"
      },
      "Person": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "emails": {
               "description": "list of emails for a person",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "first_name": {
               "description": "first name of a person",
               "type": "string"
            },
            "last_name": {
               "description": "last (family) name of a person",
               "type": "string"
            },
            "middle_name": {
               "description": "middle names of a person",
               "type": "string"
            },
            "mod_entity_id": {
               "description": "The model organism database (MOD) identifier/curie for the object",
               "type": "string"
            },
            "old_emails": {
               "description": "list of old (outdated) emails for a person",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "orcid": {
               "description": "Open Researcher and Contributor ID",
               "type": "string"
            },
            "unique_id": {
               "description": "A non-curie unique identifier for a thing.",
               "type": "string"
            }
         },
         "required": [
            "unique_id"
         ],
         "title": "Person",
         "type": "object"
      },
      "PhenotypeAnnotation": {
         "additionalProperties": false,
         "description": "An annotation asserting an association between a biological entity and a phenotype supported by evidence.",
         "properties": {
            "condition_relations": {
               "items": {
                  "$ref": "#/$defs/ConditionRelation"
               },
               "type": "array"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date of curation at the source (MOD) database.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "object": {
               "description": "phenotype statement: The label of an individual phenotype term from a phenotype ontology or the post-composed statement of the phenotype from a post-composed terminology",
               "type": "string"
            },
            "phenotype_term": {
               "type": "string"
            },
            "predicate": {
               "description": "A high-level grouping for the relationship type. This is analogous to category for nodes. In RDF, this corresponds to rdf:predicate and in Neo4j this corresponds to the relationship type.",
               "type": "string"
            },
            "single_reference": {
               "description": "The reference in which the phenotype association was asserted/reported.",
               "type": "string"
            },
            "subject": {
               "description": "The biological entity (e.g. gene, allele, genotype) to which the phenotype is associated, by direct curation.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            }
         },
         "required": [
            "predicate",
            "curie",
            "subject",
            "object",
            "creation_date",
            "created_by",
            "modified_by"
         ],
         "title": "PhenotypeAnnotation",
         "type": "object"
      },
      "PhenotypeTerm": {
         "additionalProperties": false,
         "description": "An ontology term representing a characteristic of an organism. This may or may not be expressed as a difference in comparison to a reference organism.",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "PhenotypeTerm",
         "type": "object"
      },
      "PolyphenPredictionLevels": {
         "description": "",
         "enum": [
            "possibly_damaging",
            "probably_damaging",
            "benign"
         ],
         "title": "PolyphenPredictionLevels",
         "type": "string"
      },
      "Protein": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The taxon from which the biological entity derives.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "taxon",
            "created_by",
            "modified_by"
         ],
         "title": "Protein",
         "type": "object"
      },
      "PubmedPublicationStatusEnum": {
         "description": "",
         "enum": [
            "ppublish",
            "epublish",
            "aheadofprint"
         ],
         "title": "PubmedPublicationStatusEnum",
         "type": "string"
      },
      "RNAClone": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "generated_by": {
               "description": "Holds between a material entity and an Agent that generated it: e.g., Thomas Blumenthal, Kornberg Laboratory.",
               "items": {
                  "$ref": "#/$defs/Agent"
               },
               "type": "array"
            },
            "manufactured_by": {
               "description": "Holds between a material entity and an Agent that has manufactured it: e.g., Molecular Probes.",
               "items": {
                  "$ref": "#/$defs/Agent"
               },
               "type": "array"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The taxon from which the biological entity derives.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "taxon",
            "created_by",
            "modified_by"
         ],
         "title": "RNAClone",
         "type": "object"
      },
      "ROTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "ROTerm",
         "type": "object"
      },
      "Reagent": {
         "additionalProperties": false,
         "description": "A material entity used in experiments.",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "generated_by": {
               "description": "Holds between a material entity and an Agent that generated it: e.g., Thomas Blumenthal, Kornberg Laboratory.",
               "items": {
                  "$ref": "#/$defs/Agent"
               },
               "type": "array"
            },
            "manufactured_by": {
               "description": "Holds between a material entity and an Agent that has manufactured it: e.g., Molecular Probes.",
               "items": {
                  "$ref": "#/$defs/Agent"
               },
               "type": "array"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The taxon from which the biological entity derives.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "taxon",
            "created_by",
            "modified_by"
         ],
         "title": "Reagent",
         "type": "object"
      },
      "Reference": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "abstract": {
               "description": "The author summary of the publication.",
               "type": "string"
            },
            "category": {
               "$ref": "#/$defs/ReferenceCategoryEnum"
            },
            "citation": {
               "description": "A short form way of referring to a publication, typically consisting of the first author's name, publication date, and journal (title, vol, pages).",
               "type": "string"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_arrived_in_pubmed": {
               "description": "Day in which a reference or resource was created in PUBMED. Only relevant for PUBMED references.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "date_created": {
               "description": "Date on which an entity was created in the Alliance literature database.",
               "format": "date",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "date_published": {
               "description": "Date on which an entity was created.",
               "type": "string"
            },
            "date_updated": {
               "description": "Date on which an entity was updated in the Alliance literature database.",
               "format": "date",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "issue_date": {
               "description": "Date on which an entity was issued.",
               "type": "string"
            },
            "issue_name": {
               "type": "string"
            },
            "keywords": {
               "description": "keywords tagging a publication",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "language": {
               "description": "Language of the reference",
               "type": "string"
            },
            "merged_into_id": {
               "description": "ID that used to refer to this reference",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "open_access": {
               "description": "Indicates if the reference is freely available for use by anyone, usually with fewer copyright and licensing barriers.",
               "type": "boolean"
            },
            "pages": {
               "description": "page number of source referenced for statement or publication",
               "type": "string"
            },
            "plain_language_abstract": {
               "description": "Plain language abstract",
               "type": "string"
            },
            "publisher": {
               "type": "string"
            },
            "pubmed_abstract_languages": {
               "description": "Languages for the abstract",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "pubmed_publication_status": {
               "$ref": "#/$defs/PubmedPublicationStatusEnum",
               "description": "status of the publication"
            },
            "pubmed_type": {
               "description": "Type of InformationContentEntity as described by pub med.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "reference_id": {
               "type": "integer"
            },
            "resource_id": {
               "type": "integer"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "title": {
               "description": "A human readable title for a reference.",
               "type": "string"
            },
            "volume": {
               "type": "string"
            }
         },
         "required": [
            "created_by",
            "modified_by",
            "curie"
         ],
         "title": "Reference",
         "type": "object"
      },
      "ReferenceCategoryEnum": {
         "description": "",
         "enum": [
            "Research_Article",
            "Review_Article",
            "Thesis",
            "Book",
            "Other",
            "Preprint",
            "Conference_Publication",
            "Personal_Communication",
            "Direct_Data_Submission",
            "Internal_Process_Reference",
            "Unknown",
            "Retraction"
         ],
         "title": "ReferenceCategoryEnum",
         "type": "string"
      },
      "Resource": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "authors": {
               "items": {
                  "$ref": "#/$defs/AuthorReference"
               },
               "type": "array"
            },
            "copyright_date": {
               "format": "date",
               "type": "string"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "editors": {
               "description": "holds between a resource and a editor_resource",
               "items": {
                  "$ref": "#/$defs/AuthorReference"
               },
               "type": "array"
            },
            "id": {
               "description": "Precedence of identifiers for references is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise.",
               "type": "string"
            },
            "iso_abbreviation": {
               "type": "string"
            },
            "medline_abbreviation": {
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "online_issn": {
               "type": "string"
            },
            "print_issn": {
               "type": "string"
            },
            "publisher": {
               "type": "string"
            },
            "summary": {
               "type": "string"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "title": {
               "description": "the title of the publication",
               "type": "string"
            },
            "volume": {
               "type": "string"
            }
         },
         "required": [
            "curie",
            "created_by",
            "modified_by"
         ],
         "title": "Resource",
         "type": "object"
      },
      "SOTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "SOTerm",
         "type": "object"
      },
      "SequenceTargetingReagent": {
         "additionalProperties": false,
         "description": "Dummy sequence targeting reagent class",
         "properties": {},
         "required": [],
         "title": "SequenceTargetingReagent",
         "type": "object"
      },
      "SiftPredictionLevels": {
         "description": "",
         "enum": [
            "deleterious",
            "tolerated"
         ],
         "title": "SiftPredictionLevels",
         "type": "string"
      },
      "SourceVariantLocation": {
         "additionalProperties": false,
         "description": "Links a paper to the variant locations described in that paper",
         "properties": {
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "variant_locations": {
               "description": "Location of the variant within genomic entities. Variant_locations can include any or all of: one VariantGenomeLocation stanza, one or more VariantTranscriptLocation stanzas and/or one or more VariantPolypeptideLocation stanzas.",
               "items": {
                  "$ref": "#/$defs/VariantLocation"
               },
               "type": "array"
            }
         },
         "required": [
            "variant_locations",
            "single_reference"
         ],
         "title": "SourceVariantLocation",
         "type": "object"
      },
      "SpatialQualifierSet": {
         "description": "",
         "enum": [
            "anterior",
            "anterior_posterior_gradient",
            "apical",
            "basal",
            "central",
            "distal",
            "dorsal",
            "dorso-lateral",
            "egg_length",
            "gap_expression_pattern",
            "pair_rule_expression_pattern",
            "segment_polarity_expression_pattern",
            "terminal_expression_pattern",
            "gradient"
         ],
         "title": "SpatialQualifierSet",
         "type": "string"
      },
      "SubtypeValues": {
         "description": "",
         "enum": [
            "strain",
            "genotype"
         ],
         "title": "SubtypeValues",
         "type": "string"
      },
      "Synonym": {
         "additionalProperties": false,
         "description": "",
         "properties": {},
         "required": [],
         "title": "Synonym",
         "type": "object"
      },
      "TemporalContext": {
         "additionalProperties": false,
         "description": "The developmental stage and/or age of the specimen in an annotation. Developmental_stage_stop is optional. Add an uncertainty flag here?",
         "properties": {
            "age": {
               "description": "The age at which an annotated event was observed.",
               "type": "string"
            },
            "developmental_stage_start": {
               "description": "The beginning developmental stage at which an annotated event was observed.",
               "type": "string"
            },
            "developmental_stage_stop": {
               "description": "The end developmental stage at which an annotated event was observed.",
               "type": "string"
            },
            "stage_uncertainty": {
               "type": "string"
            },
            "temporal_qualifiers": {
               "$ref": "#/$defs/TemporalQualifierSet",
               "description": "Qualifiers of the stage or age in an annotation."
            }
         },
         "required": [],
         "title": "TemporalContext",
         "type": "object"
      },
      "TemporalQualifierSet": {
         "description": "",
         "enum": [
            "progressive",
            "throughout",
            "sometime_during"
         ],
         "title": "TemporalQualifierSet",
         "type": "string"
      },
      "Transcript": {
         "additionalProperties": false,
         "description": "Placeholder.",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The taxon from which the biological entity derives.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "taxon",
            "created_by",
            "modified_by"
         ],
         "title": "Transcript",
         "type": "object"
      },
      "UBERONTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "UBERONTerm",
         "type": "object"
      },
      "Variant": {
         "additionalProperties": false,
         "description": "A DNA, RNA or protein/polypeptide sequence that differs relative to a designated reference sequence.  The sequence occurs at a single position or in a range of contiguous nucleotides or amino acids.",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "related_notes": {
               "description": "Holds between an object and a list of related Note objects.",
               "items": {
                  "$ref": "#/$defs/Note"
               },
               "type": "array"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "source_general_consequence": {
               "description": "SOTerm (child of SO:0001576 - transcript_variant) that describes the consequence of the variant, as stated in the source reference when no transcript ID is provided. Since a curator would determine variant location and consequences relative to at least one specific genome assembly, transcript and/or polypeptide, no slot for curated general consequence is provided.",
               "type": "string"
            },
            "source_variant_locations": {
               "description": "Location of the variant within genomic entities,as described in the source references.",
               "items": {
                  "$ref": "#/$defs/SourceVariantLocation"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "taxon": {
               "description": "The taxon from which the biological entity derives.",
               "type": "string"
            },
            "variant_genome_locations": {
               "description": "Location of the variant in a genomic context.  multiple variant_genome_locations represent multiple assemblies.",
               "items": {
                  "$ref": "#/$defs/VariantGenomeLocation"
               },
               "type": "array"
            },
            "variant_polypeptide_locations": {
               "description": "Location of the variant within polypeptide entities.",
               "items": {
                  "$ref": "#/$defs/VariantPolypeptideLocation"
               },
               "type": "array"
            },
            "variant_status": {
               "$ref": "#/$defs/VariantStatusEnum"
            },
            "variant_transcript_locations": {
               "description": "Location of the variant within transcript entities.",
               "items": {
                  "$ref": "#/$defs/VariantTranscriptLocation"
               },
               "type": "array"
            },
            "variant_type": {
               "description": "SOTerm describing the type of variant. In practice, variant type will be limited to a subset of the SO specified in an Alliance controlled vocabulary in order to maintain consistency.",
               "type": "string"
            }
         },
         "required": [
            "curie",
            "taxon",
            "created_by",
            "modified_by",
            "variant_type",
            "variant_genome_locations"
         ],
         "title": "Variant",
         "type": "object"
      },
      "VariantGeneConsequence": {
         "additionalProperties": false,
         "description": "Class for gene-level VEP results",
         "properties": {
            "object": {
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "polyphen_prediction": {
               "$ref": "#/$defs/PolyphenPredictionLevels",
               "description": "PolyPhen-2 prediction"
            },
            "polyphen_score": {
               "description": "PolyPhen-2 score between 0 and 1",
               "type": "number"
            },
            "sift_prediction": {
               "$ref": "#/$defs/SiftPredictionLevels",
               "description": "SIFT prediction"
            },
            "sift_score": {
               "description": "SIFT score between 0 and 1",
               "type": "number"
            },
            "subject": {
               "$ref": "#/$defs/VariantGenomeLocation",
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
            },
            "vep_consequence": {
               "$ref": "#/$defs/VepConsequenceLevels",
               "description": "VEP consequence"
            },
            "vep_impact": {
               "description": "VEP predicted impact of variation on molecule",
               "type": "string"
            }
         },
         "required": [
            "object",
            "subject"
         ],
         "title": "VariantGeneConsequence",
         "type": "object"
      },
      "VariantGenomeLocation": {
         "additionalProperties": false,
         "description": "Links a variant to a genomic position and the resulting consequence to the sequence and/or function. In practice, functional consequences for variants which overlap genes are not generally provided at the genome level but rather are calculated and annotated relative to a specific transcript or protein isoform.",
         "properties": {
            "assembly": {
               "description": "Assembly to which variant is aligned.",
               "type": "string"
            },
            "chromosome": {
               "description": "Chromosome to which variant is aligned.",
               "type": "string"
            },
            "consequence": {
               "description": "SOTerm (child of SO:0001576 - transcript_variant) that describes the consequence of the variant, as stated in the source reference. In practice source consequence will be associated with locations at any or all of VariantGenomeLocation, VariantTranscriptLocation, and VariantPolypeptideLocation.",
               "type": "string"
            },
            "end_position": {
               "description": "End position of variant on genomic entity.",
               "type": "integer"
            },
            "evidence_code": {
               "type": "string"
            },
            "reference_sequence": {
               "description": "Reference sequence of genome or genomic entity at position of aligned variant.",
               "type": "string"
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "start_position": {
               "description": "Start position of variant on genomic entity.",
               "type": "integer"
            },
            "variant_sequence": {
               "description": "Sequence that differs from the reference sequence of genome or genomic entity at position of variant, as specified by curator.",
               "type": "string"
            }
         },
         "required": [],
         "title": "VariantGenomeLocation",
         "type": "object"
      },
      "VariantPolypeptideLocation": {
         "additionalProperties": false,
         "description": "Links a variant to a position on a specified polypeptide and the resulting consequence to the sequence and/or function of that polypeptide.",
         "properties": {
            "associated_transcripts": {
               "description": "Transcript(s) associated with polypeptide to which variant is aligned.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "consequence": {
               "description": "SOTerm (child of SO:0001576 - transcript_variant) that describes the consequence of the variant, as stated in the source reference. In practice source consequence will be associated with locations at any or all of VariantGenomeLocation, VariantTranscriptLocation, and VariantPolypeptideLocation.",
               "type": "string"
            },
            "end_position": {
               "description": "End position of variant on genomic entity.",
               "type": "integer"
            },
            "evidence_code": {
               "type": "string"
            },
            "polypeptide": {
               "description": "Transcript associated with variant and for which a specific location and consequence of that variant is provided, as specified by curator. Multivalued=false for this slot because although a variant can have multiple VariantTranscriptLocation stanzas, each stanza will have one and only one curated transcript ID.",
               "type": "string"
            },
            "reference_sequence": {
               "description": "Reference sequence of genome or genomic entity at position of aligned variant.",
               "type": "string"
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "start_position": {
               "description": "Start position of variant on genomic entity.",
               "type": "integer"
            },
            "variant_sequence": {
               "description": "Sequence that differs from the reference sequence of genome or genomic entity at position of variant, as specified by curator.",
               "type": "string"
            }
         },
         "required": [
            "polypeptide"
         ],
         "title": "VariantPolypeptideLocation",
         "type": "object"
      },
      "VariantStatusEnum": {
         "description": "",
         "enum": [
            "public",
            "private"
         ],
         "title": "VariantStatusEnum",
         "type": "string"
      },
      "VariantTranscriptConsequence": {
         "additionalProperties": false,
         "description": "Class for transcript-level VEP results",
         "properties": {
            "amino_acid_reference": {
               "description": "Amino acid sequence encoded by codon(s) in reference genome sequence altered by the variant",
               "type": "string"
            },
            "amino_acid_variant": {
               "description": "Amino acid sequence encoded by codon(s) in variant sequence",
               "type": "string"
            },
            "cdna_end": {
               "description": "end position of variation in cDNA coordinates",
               "type": "integer"
            },
            "cdna_start": {
               "description": "Start position of variant in cDNA coordinates",
               "type": "integer"
            },
            "cds_end": {
               "description": "End position of variant in CDS coordinates",
               "type": "integer"
            },
            "cds_start": {
               "description": "Start position of variant in CDS coordinates",
               "type": "integer"
            },
            "cnda_end": {
               "description": "End position of variant in cDNA coordinates",
               "type": "string"
            },
            "codon_reference": {
               "description": "Reference genome sequence of codon(s) altered by the variant.  Bases affected by the variant are given in upper case, bases flanking the variation are given in lower case",
               "type": "string"
            },
            "codon_variant": {
               "description": "Sequence of codon(s) in variant sequence altered by the variant. Bases affected by the variant are given in upper case, bases flanking the variation are given in lower case",
               "type": "string"
            },
            "hgvs_coding_nomenclature": {
               "description": "HGVS coding sequence (HGVSc) name",
               "type": "string"
            },
            "hgvs_protein_nomenclature": {
               "description": "HGVS protein sequence (HGVSp) name",
               "type": "string"
            },
            "object": {
               "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
               "type": "string"
            },
            "polyphen_prediction": {
               "$ref": "#/$defs/PolyphenPredictionLevels",
               "description": "PolyPhen-2 prediction"
            },
            "polyphen_score": {
               "description": "PolyPhen-2 score between 0 and 1",
               "type": "number"
            },
            "protein_end": {
               "description": "End position of variant in amino acid sequence",
               "type": "integer"
            },
            "protein_start": {
               "description": "Start position of variant in amino acid sequence",
               "type": "integer"
            },
            "sift_prediction": {
               "$ref": "#/$defs/SiftPredictionLevels",
               "description": "SIFT prediction"
            },
            "sift_score": {
               "description": "SIFT score between 0 and 1",
               "type": "number"
            },
            "subject": {
               "$ref": "#/$defs/VariantTranscriptLocation",
               "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
            },
            "vep_consequence": {
               "$ref": "#/$defs/VepConsequenceLevels",
               "description": "VEP consequence"
            },
            "vep_impact": {
               "description": "VEP predicted impact of variation on molecule",
               "type": "string"
            }
         },
         "required": [
            "object",
            "subject"
         ],
         "title": "VariantTranscriptConsequence",
         "type": "object"
      },
      "VariantTranscriptLocation": {
         "additionalProperties": false,
         "description": "Links a variant to a position on a specified transcript and the resulting consequence to the sequence and/or function of that transcript.",
         "properties": {
            "consequence": {
               "description": "SOTerm (child of SO:0001576 - transcript_variant) that describes the consequence of the variant, as stated in the source reference. In practice source consequence will be associated with locations at any or all of VariantGenomeLocation, VariantTranscriptLocation, and VariantPolypeptideLocation.",
               "type": "string"
            },
            "end_position": {
               "description": "End position of variant on genomic entity.",
               "type": "integer"
            },
            "evidence_code": {
               "type": "string"
            },
            "reference_sequence": {
               "description": "Reference sequence of genome or genomic entity at position of aligned variant.",
               "type": "string"
            },
            "single_reference": {
               "description": "holds between an object and a single reference",
               "type": "string"
            },
            "start_position": {
               "description": "Start position of variant on genomic entity.",
               "type": "integer"
            },
            "transcript": {
               "description": "Transcript associated with variant and for which a specific location and consequence of that variant is provided, as specified at source.  Multivalued=false for this slot because although a variant can have multiple VariantTranscriptLocation stanzas, each stanza will have one and only one source transcript ID.",
               "type": "string"
            },
            "variant_sequence": {
               "description": "Sequence that differs from the reference sequence of genome or genomic entity at position of variant, as specified by curator.",
               "type": "string"
            }
         },
         "required": [],
         "title": "VariantTranscriptLocation",
         "type": "object"
      },
      "VepConsequenceLevels": {
         "description": "",
         "enum": [
            "high",
            "moderate",
            "low",
            "modifier"
         ],
         "title": "VepConsequenceLevels",
         "type": "string"
      },
      "Vocabulary": {
         "additionalProperties": false,
         "description": "A set of VocabularyTerm objects.",
         "properties": {
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "member_terms": {
               "description": "Set of VocabularyTerm objects in a Vocabulary object set",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "vocabulary_description": {
               "description": "The free text description of a Vocabulary including its intended use.",
               "type": "string"
            }
         },
         "required": [
            "name",
            "created_by",
            "modified_by"
         ],
         "title": "Vocabulary",
         "type": "object"
      },
      "VocabularyTerm": {
         "additionalProperties": false,
         "description": "A concept or class in a simple vocabulary.",
         "properties": {
            "abbreviation": {
               "type": "string"
            },
            "created_by": {
               "description": "The individual that created the entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "The date on which an entity was created. This can be applied to nodes or edges.",
               "format": "date",
               "type": "string"
            },
            "date_last_modified": {
               "description": "Date on which an entity was last modified.",
               "format": "date",
               "type": "string"
            },
            "definition": {
               "description": "The explanation of the meaning of a term.",
               "type": "string"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "modified_by": {
               "description": "The individual that last modified the entity.",
               "type": "string"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "table_key": {
               "description": "The primary key for a specific table entry, unique for that table.",
               "type": "integer"
            },
            "text_synonyms": {
               "description": "Free text synonym(s) of a term, used for controlled vocabulary terms; this is distinct from the 'synonyms' slot which has a range of a Synonym class object.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "name",
            "created_by",
            "modified_by"
         ],
         "title": "VocabularyTerm",
         "type": "object"
      },
      "WBBTTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "WBBTTerm",
         "type": "object"
      },
      "WBLSTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "WBLSTerm",
         "type": "object"
      },
      "XCOTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "XCOTerm",
         "type": "object"
      },
      "ZECOTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "ZECOTerm",
         "type": "object"
      },
      "ZFATerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "ZFATerm",
         "type": "object"
      },
      "ZFSTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "cross_references": {
               "description": "Holds between an object and its CrossReferences.",
               "items": {
                  "$ref": "#/$defs/CrossReference"
               },
               "type": "array"
            },
            "curie": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "dbkey": {
               "description": "Typically the primary key on the table.  Should be a global sequence in the database to insure uniqueness over the entire suite of tables.  Alternatively, could be a serial8 identifier. Tables with a dbkey should have an alternate key to establish uniqueness based on the data in the table.",
               "type": "string"
            },
            "definition": {
               "description": "The definition of the ontology term. This is a reference to an object that holds the text description of the term and a collection of URLs that further define the term.",
               "type": "string"
            },
            "definition_urls": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "is_obsolete": {
               "description": "Entity is no longer current.",
               "type": "boolean"
            },
            "name": {
               "description": "a human-readable name for an entity",
               "type": "string"
            },
            "namespace": {
               "description": "the namespace of the ontology.",
               "type": "string"
            },
            "secondary_identifiers": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "subsets": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "synonyms": {
               "description": "holds between a named thing and a synonym",
               "items": {
                  "$ref": "#/$defs/Synonym"
               },
               "type": "array"
            },
            "type": {
               "type": "string"
            }
         },
         "required": [
            "curie"
         ],
         "title": "ZFSTerm",
         "type": "object"
      },
      "ZygosityValues": {
         "description": "",
         "enum": [
            "GENO:0000602",
            "GENO:0000603",
            "GENO:0000604",
            "GENO:0000605",
            "GENO:0000606",
            "GENO:0000135",
            "GENO:0000136",
            "GENO:0000137",
            "GENO:0000134"
         ],
         "title": "ZygosityValues",
         "type": "string"
      }
   },
   "$id": "https://github.com/alliance-genome/agr_curation_schema/alliance_schema",
   "$schema": "http://json-schema.org/draft-07/schema#",
   "additionalProperties": false,
   "metamodel_version": "1.7.0",
   "properties": {
      "allele_ingest_set": {
         "items": {
            "$ref": "#/$defs/Allele"
         },
         "type": "array"
      },
      "disease_agm_ingest_set": {
         "items": {
            "$ref": "#/$defs/AGMDiseaseAnnotation"
         },
         "type": "array"
      },
      "disease_allele_ingest_set": {
         "items": {
            "$ref": "#/$defs/AlleleDiseaseAnnotation"
         },
         "type": "array"
      },
      "disease_gene_ingest_set": {
         "items": {
            "$ref": "#/$defs/GeneDiseaseAnnotation"
         },
         "type": "array"
      },
      "gene_ingest_set": {
         "items": {
            "$ref": "#/$defs/Gene"
         },
         "type": "array"
      }
   },
   "required": [],
   "title": "Alliance-Schema-Prototype",
   "type": "object",
   "version": "0.0.1"
}

