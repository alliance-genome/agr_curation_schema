name: Regenerate Alliance Schema Model Artifacts

on:
  pull_request:
    types: [synchronize, opened, reopened]
    branches:
      - main

jobs:
  generate-artifacts:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Install Poetry
        run: pipx install poetry==1.4.0

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install Dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Setup build environment
        run: |
          sudo apt update
          sudo apt install -y graphviz
          wget https://github.com/joelittlejohn/jsonschema2pojo/releases/download/jsonschema2pojo-1.0.2/jsonschema2pojo-1.0.2.tar.gz
          tar -xvzf jsonschema2pojo-1.0.2.tar.gz

      - name: Generate AGR Curation Model artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr checkout ${{ github.event.pull_request.number }}
          export PATH=$PATH:`pwd`/jsonschema2pojo-1.0.2/bin
          make clean-artifacts
          make -B gen-artifacts

      - name: Commit and push artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          if [[ $(git add -n generated/) ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add generated/
            git commit -m "Automated artifacts regeneration [skip actions]"
            git push
          else
            echo "No artifact changes to commit."
          fi
