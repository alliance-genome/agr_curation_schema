# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

on:
  push:
    branches:
      - disabled
name: Upload Python Package

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      #----------------------------------------------
      #          install & configure poetry
      #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1.3
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

      #----------------------------------------------
      #    install your root project, if required
      #----------------------------------------------
    - name: Install library
      run: poetry install --no-interaction


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Build package
      run: |
        # make build-package
        cp model/schema/*.yaml agr_schema/ # copy yaml files
        cp python/*.py agr_schema/ # copy python files
        cp jsonschema/allianceModel.schema.json agr_schema/ # copy allianceModel json schema
        cp util/validate_allianceModel_json.py agr_schema/ # copy command-line validation tool
        cp util/allianceModel_version.py agr_schema/ # copy command-line version tool
        cp util/allianceModel_data.py agr_schema/ # copy command-line data retrieval tool
        python setup.py bdist_wheel sdist

    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@v1.2.2
      with:
        user: __token__
        password: ${ secrets.pypi_password }
