id: https://github.com/alliance-genome/agr_persistent_schema/model/schema/expression.yaml

imports:
  - affectedGenomicModel
  - allele
  - core
  - image
  - linkml:types
  - ontologyTerm
  - phenotypeAndDiseaseAnnotation
  - reference

classes:

  AnatomicalSite:
    description: >-
      The developmental stage and/or age of the specimen in an annotation.
    slots:
      - anatomical_structure
      - anatomical_substructure
      - cellular_component
      - anatomical_qualifiers

  ExpressionAnnotation:
    mixins:
      - AuditedObject
    description: >-
      A description of when and where gene products are observed to be present,
      including experimental details, supporting evidence, and curator notes.
    notes: >-
      Curators can provide several levels of evidence for an annotation, in an
      attempt to offer support the annotation schema at various MODs.
      First, a curator can provide simply a reference (FB).
      Second, a curator can provide a Figure within that reference (ZFIN).
      Third, a curator can provide an ImagePane within some Figure (MGI).
      It's unclear which of these approaches will be chosen for future Alliance
      expression curation.
    slots:
      - curie
      - gene
      - when_expressed
      - where_expressed
      - assay
      - reagents
      - expression_qualifiers
      - perturbed_expression_qualifiers
      - perturbed
      - negated
      - uncertain
      - primary_genetic_entities
      - when_expressed_note
      - where_expressed_note
      - expression_annotation_note
      - has_reference
      - has_figure
    slot_usage:
      has_figure:
        description: >-
          The figure that supports the expression annotation.
        notes: >-
          Optional, as existing annotations from some MODs have no related
          images or figures.
        required: false
        multivalued: false
      has_reference:
        multivalued: false

  ExpressionAnnotationImagePane:
    is_a: Association
    notes: >-
      This aims to provide the same functionality as MGI imagepane.
    slot_usage:
      subject:
        range: ExpressionAnnotation
      object:
        range: ImagePane

  ExpressionAnnotationExperimentalConditionAssociation:
    is_a: Association
    description: >-
      A typed (predicate-specified) association between an expression annotation
      object and an experimental condition object
    defining_slots:
      - subject        # expression_annotation
      - object         # experimental_condition
      - predicate
    slot_usage:
      phenotype_annotation:
        range: ExpressionAnnotation
      experimental_condition:
        range: ExperimentalCondition
      predicate:
        range: expression_condition_relation_enum

  TemporalContext:
    description: >-
      The developmental stage and/or age of the specimen in an annotation.
    slots:
      - developmental_stage
      - age
      - temporal_qualifiers

slots:

  age:
    description: >-
      The age at which an annotated event was observed.
    domain: TemporalContext
    range: string
    multivalued: false  

  anatomical_qualifiers:
    description: >-
      Qualifiers that describe the spatial characteristics of an event.
    domain: AnatomicalSite
    range: anatomical_qualifier_set

  anatomical_structure:
    domain: AnatomicalTerm
    range: AnatomicalTerm

  anatomical_structure_note:
    description: >-
      A public note tied to the Anatomicalstructure of a specific expression annotation.
    domain: ExpressionAnnotation
    range: string

  anatomical_substructure:
    domain: AnatomicalTerm
    range: AnatomicalTerm

  anatomical_substructure_note:
    description: >-
      A public note tied to the AnatomicalSubstructure of a specific expression annotation.
    domain: ExpressionAnnotation
    range: string

  assay:
    description: >-
      The assay used to experimentally determine gene expression.
    domain: ExpressionAnnotation
    range: MMOTerm

  cellular_component:
    notes: >-
      I would like to restrict the range to GOTerm in cellular_component
      branch, but I'm not sure how to do this.
    domain: AnatomicalSite
    range: GOTerm

  cellular_component_note:
    description: >-
      A public note tied to the CellularComponent of a specific expression annotation.
    domain: ExpressionAnnotation
    range: string

  developmental_stage:
    description: >-
      The developmental stage at which an annotated event was observed.
    notes: >-
      Currently, we limit this to a single stage, but we could consider allowing
      for stage ranges for a single annotation.
    domain: TemporalContext
    range: StageTerm
    multivalued: false    

  expression_annotation_note:
    description: >-
      A public note tied to a specific expression annotation.
    domain: ExpressionAnnotation
    range: string

  expression_qualifiers:
    description: >-
      Qualifiers that describe additional characteristics of gene expression.
      For example: aint, intense, restricted.
    domain: ExpressionAnnotation
    range: expression_qualifier_set

  gene:
    description: >-
      The gene for which gene expression is being described.
    notes: >-
      Need to model how to annotate expression when there is no Alliance generation.
      This seems to happen at ZFIN (and MGI?) for things like GFP, lacZ.
      Would we use dummy Gene objects?
    domain: ExpressionAnnotation
    range: Gene
    required: false

  image:
    description: >-
      The image associated with the object.
    range: Image

  perturbed:
    description: >-
      Is true if the genetic and/or environmental conditions represent a
      deviation from the baseline state.
    notes: >-
      Not all conditions constitute a perturbation:
      e.g., normal temperature, standard buffer, etc.
    range: boolean

  perturbed_expression_qualifiers:
    description: >-
      Qualifiers that describe how a perturbed expression pattern deviates from
      the baseline expression pattern. For example: increased, mislocalized.
    domain: ExpressionAnnotation
    range: perturbed_expression_qualifier_set

  primary_genetic_entities:
    description: >-
      The Allele(s) or AffectedGenomicModel characterizing the specimen assayed.
    notes: >-
      We might want to, somehow, tighten up the range to only Allele and
      AffectedGenomicModel.
    domain: ExpressionAnnotation
    range: BiologicalEntity
    multivalued: true

  reagents:
    description: >-
      Reagents used in the expression assay: e.g., antibodies, probes.
    notes: >-
      assuming that specifying Reagent below will allow for objects that
      have the Reagent mixin.
    domain: ExpressionAnnotation
    range: Reagent
    multivalued: true

  temporal_qualifiers:
    description: >-
      Qualifiers of the stage or age in an annotation.
    domain: TemporalContext
    range: temporal_qualifier_set

  when_expressed:
    description: >-
      When a gene product is observed to be present.
    domain: ExpressionAnnotation
    range: TemporalContext
    multivalued: false

  when_expressed_note:
    description: >-
      A public note tied to the TemporalComponent of a specific expression annotation.
    domain: ExpressionAnnotation
    range: string

  where_expressed:
    description: >-
      Where a gene product is observed to be present.
    notes: >-
      Placeholder internal notes.
    domain: ExpressionAnnotation
    range: AnatomicalSite
    multivalued: false

  where_expressed_note:
    description: >-
      A public note tied to the AnatomicalSite of a specific expression annotation.
    domain: ExpressionAnnotation
    range: string

enums:

  anatomical_qualifier_set:
    notes: >-
      We need to get a set of relevant qualifiers used across the MODs.
      We may prefer to use ontology terms instead of an enum here.
      Filled in with a small sample of FB qualifiers for now.
    permissible_values:
      anterior:
      anterior_posterior_gradient:
      apical:
      basal:
      central:
      distal:
      dorsal:
      dorso-lateral:
      egg_length:
      gap_expression_pattern:
      pair_rule_expression_pattern:
      segment_polarity_expression_pattern:
      terminal_expression_pattern:
      gradient:

  expression_condition_relation_enum:
    permissible_values:
      has_condition:
      induced_by:

  expression_qualifier_set:
    notes: >-
      We need to get a set of relevant qualifiers used across the MODs.
      Filled in with FB qualifiers for now.
    permissible_values:
      faint:
      granular:
      intense:
      punctate:
      uniform:
      variable:

  perturbed_expression_qualifier_set:
    notes: >-
      We need to get a set of relevant qualifiers used across the MODs.
    permissible_values:
      increased:
      decreased:
      mislocalized:

  temporal_qualifier_set:
    notes: >-
      We need to get a set of relevant qualifiers used across the MODs.
      Filled in with FB qualifiers for now.
    permissible_values:
      progressive:
        description: >-
          An event that gets more pronounced with time.
