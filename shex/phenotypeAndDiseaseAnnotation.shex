# metamodel_version: 1.7.0
BASE <http://alliancegenome.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:dateTime

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

<BiologicalSequence> xsd:string

<AffectedGenomicModel> CLOSED {
    (  $<AffectedGenomicModel_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          <subtype> @<SubtypeValues> ;
          <components> @<AffectedGenomicModelComponent> * ;
          <sequence_targeting_reagents> @<SequenceTargetingReagent> * ;
          <parental_populations> @linkml:Uriorcurie ? ;
          <data_provider> @linkml:String ? ;
          <references> @<Reference> *
       ) ;
       rdf:type [ <AffectedGenomicModel> ]
    )
}

<AffectedGenomicModelComponent> CLOSED {
    (  $<AffectedGenomicModelComponent_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <has_allele> @<Allele> ? ;
          <zygosity> @<ZygosityValues> ?
       ) ;
       rdf:type [ <AffectedGenomicModelComponent> ] ?
    )
}

<Agent>  (
    CLOSED {
       (  $<Agent_tes> (  &<AuditedObject_tes> ;
             rdf:type [ <AuditedObject> ] ?
          ) ;
          rdf:type [ <Agent> ] ?
       )
    } OR @<Organization> OR @<Person>
)

<AGMDiseaseAnnotation> CLOSED {
    (  $<AGMDiseaseAnnotation_tes> (  &<DiseaseAnnotation_tes> ;
          rdf:type [ <DiseaseAnnotation> ] ? ;
          <inferred_allele> @<Allele> ? ;
          <inferred_gene> @<Gene> ? ;
          <asserted_gene> @<Gene> ? ;
          <asserted_allele> @<Allele> ? ;
          <subject> @<AffectedGenomicModel> ;
          <predicate> @<VocabularyTerm>
       ) ;
       rdf:type [ <AGMDiseaseAnnotation> ] ?
    )
}

<AGMPhenotypeAnnotation> CLOSED {
    (  $<AGMPhenotypeAnnotation_tes> (  &<PhenotypeAnnotation_tes> ;
          rdf:type [ <PhenotypeAnnotation> ] ? ;
          <inferred_allele> @<Allele> ? ;
          <inferred_gene> @<Gene> ? ;
          <asserted_gene> @<Gene> ? ;
          <asserted_allele> @<Allele> ? ;
          <subject> @<AffectedGenomicModel>
       ) ;
       rdf:type [ <AGMPhenotypeAnnotation> ]
    )
}

<Allele> CLOSED {
    (  $<Allele_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          <symbol> @linkml:String ? ;
          <contains_constructs> @<Construct> * ;
          <molecular_mutations> @linkml:String * ;
          <functional_impact> @linkml:String ? ;
          <generation_method> @linkml:String ? ;
          <associated_references> @<AssociatedReference> * ;
          <related_notes> @<Note> * ;
          <germline_transmission_status> @<VocabularyTerm> ? ;
          <parent_cell_line> @<CellLine> ? ;
          <mutant_cell_lines> @<CellLine> * ;
          <embryonic_stem_cell_lines> @<CellLine> * ;
          <images> @<Image> ? ;
          <origins> @<AffectedGenomicModel> * ;
          <database_status> @<VocabularyTerm> ? ;
          <inheritence_mode> @<VocabularyTerm> ? ;
          <in_collection> @<VocabularyTerm> ? ;
          <transposon_insertion> @linkml:String ? ;
          <aberration> @linkml:String ? ;
          <is_extinct> @linkml:Boolean ? ;
          <sequencing_status> @<VocabularyTerm> ? ;
          <synonyms> @<Synonym> * ;
          <name> @linkml:String
       ) ;
       rdf:type [ <Allele> ]
    )
}

<AlleleDiseaseAnnotation> CLOSED {
    (  $<AlleleDiseaseAnnotation_tes> (  &<DiseaseAnnotation_tes> ;
          rdf:type [ <DiseaseAnnotation> ] ? ;
          <inferred_gene> @<Gene> ? ;
          <asserted_gene> @<Gene> ? ;
          <subject> @<Allele> ;
          <predicate> @<VocabularyTerm>
       ) ;
       rdf:type [ <AlleleDiseaseAnnotation> ] ?
    )
}

<AlleleGeneAssociation> CLOSED {
    (  $<AlleleGeneAssociation_tes> (  &<AlleleGenomicEntityAssociation_tes> ;
          rdf:type [ <AlleleGenomicEntityAssociation> ] ? ;
          <object> @<Gene>
       ) ;
       rdf:type [ <AlleleGeneAssociation> ] ?
    )
}

<AlleleGenomicEntityAssociation>  (
    @<AlleleGeneAssociation> OR @<AlleleProteinAssociation> OR @<AlleleTranscriptAssociation> OR @<AlleleVariantAssociation>
)

<AlleleGenomicEntityAssociation_struct> {
    (  $<AlleleGenomicEntityAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <single_reference> @<Reference> ? ;
          <evidence_code> @<ECOTerm> ? ;
          <related_note> @<Note> ? ;
          <subject> @<Allele> ;
          <predicate> @<ROTerm> ;
          <object> @<GenomicEntity>
       ) ;
       rdf:type [ <AlleleGenomicEntityAssociation> ] ?
    )
}

<AllelePhenotypeAnnotation> CLOSED {
    (  $<AllelePhenotypeAnnotation_tes> (  &<PhenotypeAnnotation_tes> ;
          rdf:type [ <PhenotypeAnnotation> ] ? ;
          <inferred_gene> @<Gene> ? ;
          <asserted_gene> @<Gene> ? ;
          <subject> @<Allele> ;
          <asserted_allele> @<Allele> ?
       ) ;
       rdf:type [ <AllelePhenotypeAnnotation> ]
    )
}

<AlleleProteinAssociation> CLOSED {
    (  $<AlleleProteinAssociation_tes> (  &<AlleleGenomicEntityAssociation_tes> ;
          rdf:type [ <AlleleGenomicEntityAssociation> ] ? ;
          <object> @<Protein>
       ) ;
       rdf:type [ <AlleleProteinAssociation> ] ?
    )
}

<AlleleTranscriptAssociation> CLOSED {
    (  $<AlleleTranscriptAssociation_tes> (  &<AlleleGenomicEntityAssociation_tes> ;
          rdf:type [ <AlleleGenomicEntityAssociation> ] ? ;
          <object> @<Transcript>
       ) ;
       rdf:type [ <AlleleTranscriptAssociation> ] ?
    )
}

<AlleleVariantAssociation> CLOSED {
    (  $<AlleleVariantAssociation_tes> (  &<AlleleGenomicEntityAssociation_tes> ;
          rdf:type [ <AlleleGenomicEntityAssociation> ] ? ;
          <subject> @<Allele> ;
          <object> @<Variant>
       ) ;
       rdf:type [ <AlleleVariantAssociation> ] ?
    )
}

<AnatomicalTerm>  (
    @<CLTerm> OR @<DAOTerm> OR @<EMAPATerm> OR @<MATerm> OR @<UBERONTerm> OR @<WBBTTerm> OR @<XBATerm> OR @<ZFATerm>
)

<AnatomicalTerm_struct> {
    (  $<AnatomicalTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <AnatomicalTerm> ]
    )
}

<Assembly> CLOSED {
    (  $<Assembly_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ?
       ) ;
       rdf:type [ <Assembly> ]
    )
}

<AssociatedReference> CLOSED {
    (  $<AssociatedReference_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <reference_type> @<VocabularyTerm> ;
          <single_reference> @<Reference> ?
       ) ;
       rdf:type [ <AssociatedReference> ] ?
    )
}

<Association>  (
    CLOSED {
       (  $<Association_tes> (  &<AuditedObject_tes> ;
             rdf:type [ <AuditedObject> ] ? ;
             <subject> @linkml:String ;
             <predicate> @linkml:String ;
             <object> @linkml:String
          ) ;
          rdf:type [ <Association> ] ?
       )
    } OR @<AlleleGenomicEntityAssociation> OR @<ConstructComponentAssociation> OR @<DiseaseAnnotation> OR @<EntitySynonym> OR
    @<PhenotypeAnnotation> OR @<SequenceTargetingReagentToGeneAssociation>
)

<AuditedObject>  (
    CLOSED {
       (  $<AuditedObject_tes> (  <created_by> @<Person> ? ;
             <date_created> @linkml:Date ? ;
             <updated_by> @<Person> ? ;
             <date_updated> @linkml:Date ? ;
             <internal> @linkml:Boolean ;
             <obsolete> @linkml:Boolean ?
          ) ;
          rdf:type [ <AuditedObject> ] ?
       )
    } OR @<AffectedGenomicModelComponent> OR @<Agent> OR @<Assembly> OR @<AssociatedReference> OR @<Association> OR
    @<AuthorReference> OR @<BiologicalEntity> OR @<CellLine> OR @<Chromosome> OR @<ConditionRelation> OR @<CrossReference> OR
    @<EntityStatement> OR @<ExperimentalCondition> OR @<ExternalDatabaseLink> OR @<Figure> OR @<File> OR @<GeneHistory> OR
    @<GenomicLocation> OR @<Image> OR @<ImagePane> OR @<MeshDetail> OR @<Note> OR @<OntologyTerm> OR @<Reference> OR @<Resource> OR
    @<SourceVariantLocation> OR @<Synonym> OR @<VariantLocation> OR @<Vocabulary> OR @<VocabularyTerm>
)

<AuthorReference> CLOSED {
    (  $<AuthorReference_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <corresponding_author> @linkml:Boolean ? ;
          <first_author> @linkml:Boolean ? ;
          <first_name> @linkml:String ? ;
          <last_name> @linkml:String ? ;
          <cross_references> @<CrossReference> *
       ) ;
       rdf:type [ <AuthorReference> ] ?
    )
}

<BiologicalEntity>  (
    {
       (  $<BiologicalEntity_tes> (  &<AuditedObject_tes> ;
             rdf:type [ <AuditedObject> ] ? ;
             <taxon> @<NCBITaxonTerm>
          ) ;
          rdf:type [ <BiologicalEntity> ]
       )
    } OR @<GenomicEntity>
)

<CellLine> CLOSED {
    (  $<CellLine_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ?
       ) ;
       rdf:type [ <CellLine> ] ?
    )
}

<CHEBITerm> CLOSED {
    (  $<CHEBITerm_tes> (  &<ChemicalTerm_tes> ;
          rdf:type [ <ChemicalTerm> ] ?
       ) ;
       rdf:type [ <CHEBITerm> ]
    )
}

<ChemicalTerm>  (
    @<CHEBITerm> OR @<Molecule> OR @<XSMOTerm>
)

<ChemicalTerm_struct> {
    (  $<ChemicalTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ? ;
          <inchi> @linkml:String ? ;
          <inchi_key> @linkml:String ? ;
          <iupac> @linkml:String ? ;
          <formula> @linkml:String ? ;
          <smiles> @linkml:String ?
       ) ;
       rdf:type [ <ChemicalTerm> ]
    )
}

<Chromosome> CLOSED {
    (  $<Chromosome_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ?
       ) ;
       rdf:type [ <Chromosome> ]
    )
}

<CLTerm> CLOSED {
    (  $<CLTerm_tes> (  &<AnatomicalTerm_tes> ;
          rdf:type [ <AnatomicalTerm> ] ?
       ) ;
       rdf:type [ <CLTerm> ]
    )
}

<Company> CLOSED {
    (  $<Company_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <Company> ] ?
    )
}

<ConditionRelation> CLOSED {
    (  $<ConditionRelation_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <unique_id> @linkml:String ? ;
          <handle> @linkml:String ? ;
          <single_reference> @<Reference> ? ;
          <condition_relation_type> @<VocabularyTerm> ;
          <conditions> @<ExperimentalCondition> *
       ) ;
       rdf:type [ <ConditionRelation> ] ?
    )
}

<Construct> CLOSED {
    (  $<Construct_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          <construct_components> @<GenomicEntity> * ;
          <references> @<Reference> * ;
          <name> @linkml:String
       ) ;
       rdf:type [ <Construct> ]
    )
}

<ConstructComponent> CLOSED {
    (  $<ConstructComponent_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          <symbol> @linkml:String ?
       ) ;
       rdf:type [ <ConstructComponent> ]
    )
}

<ConstructComponentAssociation> CLOSED {
    (  $<ConstructComponentAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <predicate> @<ConstructComponentRelationEnum> ;
          <subject> @<Construct> ;
          <object> @<ConstructComponent>
       ) ;
       rdf:type [ <ConstructComponentAssociation> ] ?
    )
}

<CrossReference> CLOSED {
    (  $<CrossReference_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <page_areas> @linkml:String + ;
          <display_name> @linkml:String ;
          <prefix> @linkml:String
       ) ;
       rdf:type [ <CrossReference> ]
    )
}

<DAOTerm> CLOSED {
    (  $<DAOTerm_tes> (  &<AnatomicalTerm_tes> ;
          rdf:type [ <AnatomicalTerm> ] ?
       ) ;
       rdf:type [ <DAOTerm> ]
    )
}

<DiseaseAnnotation>  (
    @<AGMDiseaseAnnotation> OR @<AlleleDiseaseAnnotation> OR @<GeneDiseaseAnnotation>
)

<DiseaseAnnotation_struct> {
    (  $<DiseaseAnnotation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <unique_id> @linkml:String ? ;
          <mod_entity_id> @linkml:String ? ;
          <negated> @linkml:Boolean ? ;
          <evidence_codes> @<ECOTerm> + ;
          <single_reference> @<Reference> ;
          <annotation_type> @<VocabularyTerm> ? ;
          <with> @<Gene> * ;
          <disease_qualifiers> @<VocabularyTerm> * ;
          <condition_relations> @<ConditionRelation> * ;
          <genetic_sex> @<VocabularyTerm> ? ;
          <related_notes> @<Note> * ;
          <data_provider> @linkml:String ;
          <secondary_data_provider> @linkml:String ? ;
          <disease_genetic_modifier> @<BiologicalEntity> ? ;
          <disease_genetic_modifier_relation> @<VocabularyTerm> ? ;
          <subject> @<BiologicalEntity> ;
          <predicate> @linkml:String ;
          <object> @<DOTerm>
       ) ;
       rdf:type [ <DiseaseAnnotation> ] ?
    )
}

<DOTerm> CLOSED {
    (  $<DOTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <DOTerm> ]
    )
}

<ECOTerm> CLOSED {
    (  $<ECOTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ? ;
          <abbreviation> @linkml:String ?
       ) ;
       rdf:type [ <ECOTerm> ]
    )
}

<EMAPATerm> CLOSED {
    (  $<EMAPATerm_tes> (  &<AnatomicalTerm_tes> ;
          rdf:type [ <AnatomicalTerm> ] ?
       ) ;
       rdf:type [ <EMAPATerm> ]
    )
}

<EntityStatement> CLOSED {
    (  $<EntityStatement_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <statement_subject> @linkml:String ? ;
          <statement_type> @linkml:String ? ;
          <statement_text> @linkml:String ? ;
          <references> @<Reference> *
       ) ;
       rdf:type [ <EntityStatement> ] ?
    )
}

<EntitySynonym> CLOSED {
    (  $<EntitySynonym_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <object> @<Synonym> ;
          <predicate> @<EntitySynonymTypeSet> ;
          <references> @<Reference> *
       ) ;
       rdf:type [ <EntitySynonym> ] ?
    )
}

<ExperimentalCondition> CLOSED {
    (  $<ExperimentalCondition_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <unique_id> @linkml:String ? ;
          <condition_class> @<ZECOTerm> ;
          <condition_summary> @linkml:String ? ;
          <condition_statement> @linkml:String ;
          <condition_id> @<ExperimentalConditionOntologyTerm> ? ;
          <condition_free_text> @linkml:String ? ;
          <condition_quantity> @linkml:String ? ;
          <condition_anatomy> @<AnatomicalTerm> ? ;
          <condition_gene_ontology> @<GOTerm> ? ;
          <condition_taxon> @<NCBITaxonTerm> ? ;
          <condition_chemical> @<ChemicalTerm> ?
       ) ;
       rdf:type [ <ExperimentalCondition> ] ?
    )
}

<ExperimentalConditionOntologyTerm>  (
    @<XCOTerm> OR @<ZECOTerm>
)

<ExperimentalConditionOntologyTerm_struct> {
    (  $<ExperimentalConditionOntologyTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <ExperimentalConditionOntologyTerm> ]
    )
}

<ExternalDatabaseLink> CLOSED {
    (  $<ExternalDatabaseLink_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <dbkey> @linkml:String ? ;
          <prefix> @linkml:String ;
          <url_prefix> @linkml:String ? ;
          <url_suffix> @linkml:String ? ;
          <prefix_page> @linkml:String ? ;
          <prefix_order> @linkml:String ?
       ) ;
       rdf:type [ <ExternalDatabaseLink> ] ?
    )
}

<FBCVTerm> CLOSED {
    (  $<FBCVTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <FBCVTerm> ]
    )
}

<FBDVTerm> CLOSED {
    (  $<FBDVTerm_tes> (  &<StageTerm_tes> ;
          rdf:type [ <StageTerm> ] ?
       ) ;
       rdf:type [ <FBDVTerm> ]
    )
}

<Figure> CLOSED {
    (  $<Figure_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <single_reference> @<Reference> ;
          <label> @linkml:String ? ;
          <caption> @linkml:String ? ;
          <secondary_identifiers> @linkml:Uriorcurie *
       ) ;
       rdf:type [ <Figure> ]
    )
}

<File> CLOSED {
    (  $<File_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ?
       ) ;
       rdf:type [ <File> ] ?
    )
}

<Gene> CLOSED {
    (  $<Gene_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          <symbol> @linkml:String ;
          <related_notes> @<Note> * ;
          <gene_type> @<SOTerm> ? ;
          <gene_types_secondary> @<SOTerm> * ;
          <designating_laboratories> @<Laboratory> * ;
          <designating_persons> @linkml:String * ;
          <trans_splice_leaders> @linkml:String * ;
          <contig> @linkml:String * ;
          <anatomy_function> @linkml:String * ;
          <product_binds_matrix> @linkml:String * ;
          <wbprocess> @linkml:String * ;
          <transposon_origin> @linkml:Boolean ?
       ) ;
       rdf:type [ <Gene> ]
    )
}

<GeneDiseaseAnnotation> CLOSED {
    (  $<GeneDiseaseAnnotation_tes> (  &<DiseaseAnnotation_tes> ;
          rdf:type [ <DiseaseAnnotation> ] ? ;
          <sgd_strain_background> @<AffectedGenomicModel> ? ;
          <subject> @<Gene> ;
          <predicate> @<VocabularyTerm>
       ) ;
       rdf:type [ <GeneDiseaseAnnotation> ] ?
    )
}

<GeneHistory> CLOSED {
    (  $<GeneHistory_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <current_status> @linkml:String * ;
          <current_version> @linkml:Integer ? ;
          <merged_into> @<Gene> * ;
          <acquires_merge> @<Gene> * ;
          <split_from> @<Gene> * ;
          <split_into> @<Gene> *
       ) ;
       rdf:type [ <GeneHistory> ] ?
    )
}

<GenePhenotypeAnnotation> CLOSED {
    (  $<GenePhenotypeAnnotation_tes> (  &<PhenotypeAnnotation_tes> ;
          rdf:type [ <PhenotypeAnnotation> ] ? ;
          <sgd_strain_background> @<AffectedGenomicModel> ? ;
          <subject> @<Gene>
       ) ;
       rdf:type [ <GenePhenotypeAnnotation> ]
    )
}

<GeneticMapPosition> CLOSED {
    (  $<GeneticMapPosition_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          <genetic_map_chromosome> @<Chromosome> ? ;
          <genetic_map_band> @linkml:String ? ;
          <genetic_map_position_centimorgan> @linkml:Float * ;
          <genetic_map_position_centimorgan_error> @linkml:Float * ;
          <genetic_map_position_radiation> @linkml:Float *
       ) ;
       rdf:type [ <GeneticMapPosition> ]
    )
}

<GenomicEntity>  (
    CLOSED {
       (  $<GenomicEntity_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ? ;
             <name> @linkml:String ? ;
             <synonyms> @<Synonym> * ;
             <cross_references> @<CrossReference> * ;
             <secondary_identifiers> @linkml:Uriorcurie * ;
             <genomic_locations> @<GenomicLocation> *
          ) ;
          rdf:type [ <GenomicEntity> ]
       )
    } OR @<AffectedGenomicModel> OR @<Allele> OR @<Construct> OR @<ConstructComponent> OR @<Gene> OR @<GeneticMapPosition> OR
    @<Protein> OR @<SequenceTargetingReagent> OR @<Transcript> OR @<Variant>
)

<GenomicLocation> CLOSED {
    (  $<GenomicLocation_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <subject> @<GenomicEntity> ;
          <predicate> @linkml:String ;
          <object> @<Chromosome> ;
          <has_assembly> @<Assembly> ;
          <start> @linkml:String ? ;
          <end> @linkml:String ?
       ) ;
       rdf:type [ <GenomicLocation> ] ?
    )
}

<GOTerm> CLOSED {
    (  $<GOTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <GOTerm> ]
    )
}

<Image> CLOSED {
    (  $<Image_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <associated_with_figure> @<Figure> ;
          <width> @linkml:Integer ;
          <height> @linkml:Integer ;
          <image_file> @<File> ;
          <image_medium_file> @<File> ;
          <image_thumbnail_file> @<File> ;
          <cropped_from> @<Image> ? ;
          <image_x_origin> @linkml:Integer ? ;
          <image_y_origin> @linkml:Integer ? ;
          <video_still> @linkml:Boolean ? ;
          <secondary_identifiers> @linkml:Uriorcurie *
       ) ;
       rdf:type [ <Image> ]
    )
}

<ImagePane> CLOSED {
    (  $<ImagePane_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <from_image> @<Image> ;
          <label> @linkml:String ? ;
          <width> @linkml:Integer ;
          <height> @linkml:Integer ;
          <image_x_origin> @linkml:Integer ? ;
          <image_y_origin> @linkml:Integer ?
       ) ;
       rdf:type [ <ImagePane> ] ?
    )
}

<Laboratory> CLOSED {
    (  $<Laboratory_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <Laboratory> ] ?
    )
}

<LoggedInPerson> CLOSED {
    (  $<LoggedInPerson_tes> (  &<Person_tes> ;
          rdf:type [ <Person> ] ? ;
          <okta_id> @linkml:String ;
          <okta_email> @linkml:String ;
          <user_settings> @linkml:String ?
       ) ;
       rdf:type [ <LoggedInPerson> ]
    )
}

<MATerm> CLOSED {
    (  $<MATerm_tes> (  &<AnatomicalTerm_tes> ;
          rdf:type [ <AnatomicalTerm> ] ?
       ) ;
       rdf:type [ <MATerm> ]
    )
}

<MeshDetail> CLOSED {
    (  $<MeshDetail_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <mesh_detail_id> @linkml:Integer ;
          <reference_id> @linkml:Integer ;
          <heading_term> @linkml:String ;
          <qualifier_term> @linkml:String ?
       ) ;
       rdf:type [ <MeshDetail> ] ?
    )
}

<MITerm> CLOSED {
    (  $<MITerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <MITerm> ]
    )
}

<MMOTerm> CLOSED {
    (  $<MMOTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <MMOTerm> ]
    )
}

<MMUSDVTerm> CLOSED {
    (  $<MMUSDVTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <MMUSDVTerm> ]
    )
}

<Molecule> CLOSED {
    (  $<Molecule_tes> (  &<ChemicalTerm_tes> ;
          rdf:type [ <ChemicalTerm> ] ?
       ) ;
       rdf:type [ <Molecule> ]
    )
}

<NCBITaxonTerm> CLOSED {
    (  $<NCBITaxonTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <NCBITaxonTerm> ]
    )
}

<Note> CLOSED {
    (  $<Note_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <free_text> @linkml:String ;
          <note_type> @<VocabularyTerm> ;
          <references> @<Reference> *
       ) ;
       rdf:type [ <Note> ] ?
    )
}

<OntologyTerm>  (
    CLOSED {
       (  $<OntologyTerm_tes> (  &<AuditedObject_tes> ;
             rdf:type [ <AuditedObject> ] ? ;
             <dbkey> @linkml:String ? ;
             <name> @linkml:String ? ;
             <definition> @linkml:String ? ;
             <definition_urls> @linkml:String * ;
             <type> @linkml:Uriorcurie ? ;
             <cross_references> @<CrossReference> * ;
             <synonyms> @<Synonym> * ;
             <namespace> @linkml:String ? ;
             <subsets> @linkml:String * ;
             <secondary_identifiers> @linkml:Uriorcurie *
          ) ;
          rdf:type [ <OntologyTerm> ]
       )
    } OR @<AnatomicalTerm> OR @<ChemicalTerm> OR @<DOTerm> OR @<ECOTerm> OR @<ExperimentalConditionOntologyTerm> OR @<FBCVTerm> OR
    @<GOTerm> OR @<MITerm> OR @<MMOTerm> OR @<MMUSDVTerm> OR @<NCBITaxonTerm> OR @<PhenotypeTerm> OR @<ROTerm> OR @<SOTerm> OR
    @<StageTerm> OR @<XBEDTerm>
)

<Organization>  (
    CLOSED {
       (  $<Organization_tes> (  &<Agent_tes> ;
             rdf:type [ <Agent> ] ?
          ) ;
          rdf:type [ <Organization> ] ?
       )
    } OR @<Company> OR @<Laboratory>
)

<Person>  (
    CLOSED {
       (  $<Person_tes> (  &<Agent_tes> ;
             rdf:type [ <Agent> ] ? ;
             <last_name> @linkml:String ? ;
             <middle_name> @linkml:String ? ;
             <first_name> @linkml:String ? ;
             <orcid> @linkml:Uriorcurie ? ;
             <emails> @linkml:String * ;
             <old_emails> @linkml:String * ;
             <mod_entity_id> @linkml:String ?
          ) ;
          rdf:type [ <Person> ]
       )
    } OR @<LoggedInPerson>
)

<PhenotypeAnnotation>  (
    CLOSED {
       (  $<PhenotypeAnnotation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             <single_reference> @<Reference> ? ;
             <phenotype_term> @<PhenotypeTerm> ? ;
             <condition_relations> @<ConditionRelation> * ;
             <subject> @<BiologicalEntity> ;
             <object> @linkml:String ;
             <date_created> @linkml:Date
          ) ;
          rdf:type [ <PhenotypeAnnotation> ]
       )
    } OR @<AGMPhenotypeAnnotation> OR @<AllelePhenotypeAnnotation> OR @<GenePhenotypeAnnotation>
)

<PhenotypeTerm>  (
    CLOSED {
       (  $<PhenotypeTerm_tes> (  &<OntologyTerm_tes> ;
             rdf:type [ <OntologyTerm> ] ?
          ) ;
          rdf:type [ <PhenotypeTerm> ]
       )
    } OR @<XPOTerm>
)

<Protein> CLOSED {
    (  $<Protein_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ?
       ) ;
       rdf:type [ <Protein> ]
    )
}

<Reference> CLOSED {
    (  $<Reference_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <abstract> @linkml:String ? ;
          <authors> @<AuthorReference> * ;
          <category> @<ReferenceCategoryEnum> ? ;
          <date_arrived_in_pubmed> @linkml:String * ;
          <date_last_modified_in_pubmed> @linkml:String ? ;
          <date_published> @linkml:String ? ;
          <issue_name> @linkml:String ? ;
          <keywords> @linkml:String * ;
          <language> @linkml:String ? ;
          <merged_into_id> @linkml:Uriorcurie ? ;
          <open_access> @linkml:Boolean ? ;
          <page_range> @linkml:String ? ;
          <plain_language_abstract> @linkml:String ? ;
          <publisher> @linkml:String ? ;
          <pubmed_abstract_languages> @linkml:String * ;
          <pubmed_publication_status> @<PubmedPublicationStatusEnum> ? ;
          <pubmed_type> @<PubmedTypeEnum> * ;
          <reference_id> @linkml:Integer ;
          <resource_id> @linkml:Integer ? ;
          <title> @linkml:String ? ;
          <volume> @linkml:String ?
       ) ;
       rdf:type [ <Reference> ]
    )
}

<Resource> CLOSED {
    (  $<Resource_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <title> @linkml:String ? ;
          <iso_abbreviation> @linkml:String ? ;
          <medline_abbreviation> @linkml:String ? ;
          <copyright_date> @linkml:Date ? ;
          <print_issn> @linkml:String ? ;
          <online_issn> @linkml:String ? ;
          <publisher> @linkml:String ? ;
          <volume> @linkml:String ? ;
          <summary> @linkml:String ? ;
          <synonyms> @<Synonym> * ;
          <authors> @<AuthorReference> * ;
          <editors> @<AuthorReference> * ;
          <id> @linkml:String ?
       ) ;
       rdf:type [ <Resource> ]
    )
}

<ROTerm> CLOSED {
    (  $<ROTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <ROTerm> ]
    )
}

<SequenceTargetingReagent> CLOSED {
    (  $<SequenceTargetingReagent_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          <references> @<Reference> * ;
          <name> @linkml:String
       ) ;
       rdf:type [ <SequenceTargetingReagent> ]
    )
}

<SequenceTargetingReagentToGeneAssociation> CLOSED {
    (  $<SequenceTargetingReagentToGeneAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <references> @<Reference> * ;
          <predicate> @<SqtrRelationEnum> ;
          <subject> @<SequenceTargetingReagent> ;
          <object> @<Gene>
       ) ;
       rdf:type [ <SequenceTargetingReagentToGeneAssociation> ] ?
    )
}

<SOTerm> CLOSED {
    (  $<SOTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <SOTerm> ]
    )
}

<SourceVariantLocation> CLOSED {
    (  $<SourceVariantLocation_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <variant_locations> @<VariantLocation> + ;
          <single_reference> @<Reference>
       ) ;
       rdf:type [ <SourceVariantLocation> ] ?
    )
}

<StageTerm>  (
    @<FBDVTerm> OR @<WBLSTerm> OR @<XBSTerm> OR @<ZFSTerm>
)

<StageTerm_struct> {
    (  $<StageTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <StageTerm> ]
    )
}

<Synonym> CLOSED {
    (  $<Synonym_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <synonym> @linkml:String ?
       ) ;
       rdf:type [ <Synonym> ] ?
    )
}

<Transcript> CLOSED {
    (  $<Transcript_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ?
       ) ;
       rdf:type [ <Transcript> ]
    )
}

<UBERONTerm> CLOSED {
    (  $<UBERONTerm_tes> (  &<AnatomicalTerm_tes> ;
          rdf:type [ <AnatomicalTerm> ] ?
       ) ;
       rdf:type [ <UBERONTerm> ]
    )
}

<Variant> CLOSED {
    (  $<Variant_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          <variant_type> @<SOTerm> ;
          <related_notes> @<Note> * ;
          <source_general_consequence> @<SOTerm> ? ;
          <variant_genome_locations> @<VariantGenomeLocation> + ;
          <variant_polypeptide_locations> @<VariantPolypeptideLocation> * ;
          <variant_transcript_locations> @<VariantTranscriptLocation> * ;
          <source_variant_locations> @<SourceVariantLocation> * ;
          <variant_status> @<VariantStatusEnum> ?
       ) ;
       rdf:type [ <Variant> ]
    )
}

<VariantGenomeLocation> CLOSED {
    (  $<VariantGenomeLocation_tes> (  &<VariantLocation_tes> ;
          rdf:type [ <VariantLocation> ] ? ;
          <assembly> @<Assembly> ? ;
          <chromosome> @<Chromosome> ?
       ) ;
       rdf:type [ <VariantGenomeLocation> ] ?
    )
}

<VariantLocation>  (
    @<VariantGenomeLocation> OR @<VariantPolypeptideLocation> OR @<VariantTranscriptLocation>
)

<VariantLocation_struct> {
    (  $<VariantLocation_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <evidence_code> @<ECOTerm> ? ;
          <single_reference> @<Reference> ? ;
          <start_position> @linkml:Integer ? ;
          <end_position> @linkml:Integer ? ;
          <reference_sequence> @<BiologicalSequence> ? ;
          <variant_sequence> @<BiologicalSequence> ? ;
          <consequence> @<SOTerm> ?
       ) ;
       rdf:type [ <VariantLocation> ] ?
    )
}

<VariantPolypeptideLocation> CLOSED {
    (  $<VariantPolypeptideLocation_tes> (  &<VariantLocation_tes> ;
          rdf:type [ <VariantLocation> ] ? ;
          <polypeptide> @<Transcript> ;
          <associated_transcripts> @<Transcript> *
       ) ;
       rdf:type [ <VariantPolypeptideLocation> ] ?
    )
}

<VariantTranscriptLocation> CLOSED {
    (  $<VariantTranscriptLocation_tes> (  &<VariantLocation_tes> ;
          rdf:type [ <VariantLocation> ] ? ;
          <transcript> @<Transcript> ?
       ) ;
       rdf:type [ <VariantTranscriptLocation> ] ?
    )
}

<Vocabulary> CLOSED {
    (  $<Vocabulary_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <vocabulary_description> @linkml:String ? ;
          <member_terms> @<VocabularyTerm> *
       ) ;
       rdf:type [ <Vocabulary> ]
    )
}

<VocabularyTerm> CLOSED {
    (  $<VocabularyTerm_tes> (  &<AuditedObject_tes> ;
          rdf:type [ <AuditedObject> ] ? ;
          <abbreviation> @linkml:String ? ;
          <definition> @linkml:String ? ;
          <text_synonyms> @linkml:String *
       ) ;
       rdf:type [ <VocabularyTerm> ]
    )
}

<WBBTTerm> CLOSED {
    (  $<WBBTTerm_tes> (  &<AnatomicalTerm_tes> ;
          rdf:type [ <AnatomicalTerm> ] ?
       ) ;
       rdf:type [ <WBBTTerm> ]
    )
}

<WBLSTerm> CLOSED {
    (  $<WBLSTerm_tes> (  &<StageTerm_tes> ;
          rdf:type [ <StageTerm> ] ?
       ) ;
       rdf:type [ <WBLSTerm> ]
    )
}

<XBATerm> CLOSED {
    (  $<XBATerm_tes> (  &<AnatomicalTerm_tes> ;
          rdf:type [ <AnatomicalTerm> ] ?
       ) ;
       rdf:type [ <XBATerm> ]
    )
}

<XBEDTerm> CLOSED {
    (  $<XBEDTerm_tes> (  &<OntologyTerm_tes> ;
          rdf:type [ <OntologyTerm> ] ?
       ) ;
       rdf:type [ <XBEDTerm> ]
    )
}

<XBSTerm> CLOSED {
    (  $<XBSTerm_tes> (  &<StageTerm_tes> ;
          rdf:type [ <StageTerm> ] ?
       ) ;
       rdf:type [ <XBSTerm> ]
    )
}

<XCOTerm> CLOSED {
    (  $<XCOTerm_tes> (  &<ExperimentalConditionOntologyTerm_tes> ;
          rdf:type [ <ExperimentalConditionOntologyTerm> ] ?
       ) ;
       rdf:type [ <XCOTerm> ]
    )
}

<XPOTerm> CLOSED {
    (  $<XPOTerm_tes> (  &<PhenotypeTerm_tes> ;
          rdf:type [ <PhenotypeTerm> ] ?
       ) ;
       rdf:type [ <XPOTerm> ]
    )
}

<XSMOTerm> CLOSED {
    (  $<XSMOTerm_tes> (  &<ChemicalTerm_tes> ;
          rdf:type [ <ChemicalTerm> ] ?
       ) ;
       rdf:type [ <XSMOTerm> ]
    )
}

<ZECOTerm> CLOSED {
    (  $<ZECOTerm_tes> (  &<ExperimentalConditionOntologyTerm_tes> ;
          rdf:type [ <ExperimentalConditionOntologyTerm> ] ?
       ) ;
       rdf:type [ <ZECOTerm> ]
    )
}

<ZFATerm> CLOSED {
    (  $<ZFATerm_tes> (  &<AnatomicalTerm_tes> ;
          rdf:type [ <AnatomicalTerm> ] ?
       ) ;
       rdf:type [ <ZFATerm> ]
    )
}

<ZFSTerm> CLOSED {
    (  $<ZFSTerm_tes> (  &<StageTerm_tes> ;
          rdf:type [ <StageTerm> ] ?
       ) ;
       rdf:type [ <ZFSTerm> ]
    )
}



